{"version":3,"file":"webrtmp.js","mappings":"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","sources":["webpack://webrtmpjs/webpack/universalModuleDefinition","webpack://webrtmpjs/./node_modules/worker-loader/dist/runtime/inline.js","webpack://webrtmpjs/webpack/bootstrap","webpack://webrtmpjs/webpack/runtime/compat get default export","webpack://webrtmpjs/webpack/runtime/define property getters","webpack://webrtmpjs/webpack/runtime/hasOwnProperty shorthand","webpack://webrtmpjs/webpack/runtime/make namespace object","webpack://webrtmpjs/./src/utils/logger.js","webpack://webrtmpjs/./src/utils/event_emitter.js","webpack://webrtmpjs/./src/formats/media-segment-info.js","webpack://webrtmpjs/./src/utils/exception.js","webpack://webrtmpjs/./src/utils/utils.js","webpack://webrtmpjs/./src/utils/browser.js","webpack://webrtmpjs/./src/wss/connection.worker.js","webpack://webrtmpjs/./src/webrtmp.js","webpack://webrtmpjs/./src/wss/webrtmp.controller.js","webpack://webrtmpjs/./src/utils/mse-controller.js","webpack://webrtmpjs/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webrtmpjs\"] = factory();\n\telse\n\t\troot[\"webrtmpjs\"] = factory();\n})(this, () => {\nreturn ","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Copyright (C) 2016 itNOX. All Rights Reserved.\n *\n * @author Michael Balen <mb@itnox.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nclass Log {\n    static OFF = -1;\n    static TRACE = 0;\n    static DEBUG = 1;\n    static INFO = 2;\n    static WARN = 3;\n    static ERROR = 4;\n    static CRITICAL = 5;\n    static WITH_STACKTRACE = true;\n\n    static LEVEL = Log.INFO;\n\n    /**\n     * Object with [ClassName, Loglevel]\n     * @type {Object}\n     */\n    static loglevels = {};\n\n    /**\n     *\n     * @param {Number} level\n     * @param {String} tag\n     * @param txt\n     * @private\n     */\n    static _output = function output(level, tag, ...txt){\n        let tmpLevel = Log.LEVEL;\n\n        // Dirty fix because inline worker cant access static properties\n        try{\n            if(Log.loglevels[tag]) tmpLevel = Log.loglevels[tag];\n        }catch (e) {\n            return;\n        }\n\n\n        if(tmpLevel === Log.OFF) return;\n        if(tmpLevel > level) return;\n\n        const callstack = Log._getStackTrace();\n\n        // debug aufruf entfernen\n        callstack.shift();\n        callstack.shift();\n\n        let color = \"color: silver\";\n\n        switch(level) {\n            case Log.TRACE:\t// TRACE\n                color = \"background-color: gray\";\n                break;\n\n            case Log.DEBUG:\t// DEBUG\n                break;\n\n            case Log.INFO:\t// INFO\n                color = \"color: green\";\n                break;\n\n            case Log.WARN:\t// WARN\n                color = \"color: orange; background-color: #EAA80035\";\n                break;\n\n            case Log.ERROR:\t// ERROR\n                color = \"color: red; background-color: #FF000020\";\n                break;\n\n            case Log.CRITICAL:\t// CRITICAL\n                color = \"color: red\";\n                break;\n        }\n\n        Log._print(callstack, color, tag, ...txt);\n    };\n\n    /**\n     * Internal for console dump\n     * @param {String[]} callstack\n     * @param {String} color\n     * @param {String} tag\n     * @param txt\n     * @private\n     */\n    static _print(callstack, color, tag, ...txt){\n        if(Log.WITH_STACKTRACE){\n            if(Log.LEVEL === Log.ERROR){\n                console.group(\"%c[\" + tag + \"]\", color, ...txt);\n            } else {\n                console.groupCollapsed(\"%c[\" + tag + \"]\", color, ...txt);\n            }\n\n            for(let i = 0; i < callstack.length; i++) {\n                console.log(\"%c\" + callstack[i], color);\n            }\n\n            console.groupEnd();\n\n        } else {\n            console.log(\"%c[\" + tag + \"]\", color, ...txt)\n        }\n    }\n\n    /**\n     * Get Callstack\n     * @returns {String[]}\n     * @private\n     */\n    static _getStackTrace = function() {\n        let callstack = [];\n\n        try {\n            i.dont.exist+=0; //doesn't exist- that's the point\n\n        } catch(e) {\n            if (e.stack) { //Firefox\n                let lines = e.stack.split('\\n');\n\n                for (let i=0; i < lines.length; i++) {\n                    callstack.push(lines[i]);\n                }\n\n                //Ersten Eintrag entfernen\n                callstack.shift();\n                callstack.shift();\n            }\n        }\n\n        return(callstack);\n    };\n\n    /**\n     * Log Critical\n     * @param {String} tag\n     * @param msg\n     */\n    static c(tag, ...msg) {\n        Log._output(Log.CRITICAL, tag, ...msg);\n    }\n\n    /**\n     * Log Error\n     * @param {String} tag\n     * @param msg\n     */\n    static e(tag, ...msg) {\n        Log._output(Log.ERROR, tag, ...msg);\n    }\n\n    /**\n     * Log Info\n     * @param {String} tag\n     * @param msg\n     */\n    static i(tag, ...msg) {\n        Log._output(Log.INFO, tag, ...msg);\n    }\n\n    /**\n     * Log Warning\n     * @param {String} tag\n     * @param msg\n     */\n    static w(tag, ...msg) {\n        Log._output(Log.WARN, tag, ...msg);\n    }\n\n    /**\n     * Log Debug\n     * @param {String} tag\n     * @param msg\n     */\n    static d(tag, ...msg) {\n        Log._output(Log.DEBUG, tag, ...msg);\n    }\n\n    /**\n     * Log Debug\n     * @param {String} tag\n     * @param msg\n     */\n    static v(tag, ...msg) {\n        Log._output(Log.DEBUG, tag, ...msg);\n    }\n\n    /**\n     * Log Trace\n     * @param {String} tag\n     * @param msg\n     */\n    static t(tag, ...msg) {\n        Log._output(Log.TRACE, tag, ...msg);\n    }\n}\n\nexport default Log;\n","/*\n *\n * Copyright (C) 2023 itNOX. All Rights Reserved.\n *\n * @author Michael Balen <mb@itnox.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport Log from \"../utils/logger\";\n\n/**\n * A small class for Handling events\n */\nclass EventEmitter{\n\tListenerList = [];\n\tTAG = \"EventEmitter\";\n\twaiters = [];\n\n\tconstructor() {\n\t}\n\n\t/**\n\t * Add an event listener\n\t * @param {String} event - The Name of the event\n\t * @param {Function} listener - the callback when occurs\n\t * @param {boolean} modal - Overwrite existing listener for this event\n\t */\n\taddEventListener(event, listener, modal = false){\n\t\tLog.d(this.TAG, \"addEventListener: \" + event);\n\n\t\tfor(let i = 0; i < this.ListenerList.length;i++){\n\t\t\tlet entry = this.ListenerList[i];\n\t\t\tif(entry[0] === event) {\n\t\t\t\tif (modal || entry[1] === listener) {\n\t\t\t\t\tLog.w(this.TAG, \"Listener already registered, overriding\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.ListenerList.push([event, listener]);\n\t}\n\n\twaitForEvent(event, callback){\n\t\tthis.waiters.push([event, callback]);\n\t}\n\n\t/**\n\t * A synonym for addEventListener\n\t * @param {String} event\n\t * @param {Function} listener\n\t * @param {boolean} modal\n\t */\n\taddListener(event, listener, modal){\n\t\tthis.addEventListener(event, listener, modal);\n\t}\n\n\n\t/**\n\t * Remove an event listener\n\t * @param {String} event\n\t * @param {Function} listener\n\t */\n\tremoveEventListener(event, listener){\n\t\tLog.d(this.TAG, \"removeEventListener: \" + event);\n\n\t\tfor(let i = 0; i < this.ListenerList.length;i++){\n\t\t\tlet entry = this.ListenerList[i];\n\t\t\tif(entry[0] === event && entry[1] === listener){\n\t\t\t\tthis.ListenerList.splice(i,1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n    /**\n     * A synonym for removeEventListener\n     * @param {String} event\n     * @param {Function} listener\n     */\n\tremoveListener(event, listener){\n\t\tthis.removeEventListener(event, listener);\n\t}\n\n\t/**\n\t * Remove all listener\n     * @param {String|undefined} event - If provided, remove all listener for this event\n\t */\n\tremoveAllEventListener(event){\n\t\tLog.d(this.TAG, \"removeAllEventListener: \", event);\n\t\tif(event) {\n\t\t\tfor(let i = 0; i < this.ListenerList.length;i++) {\n\t\t\t\tlet entry = this.ListenerList[i];\n\t\t\t\tif(entry[0] === event){\n\t\t\t\t\tthis.ListenerList.splice(i,1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t} else\n\t\t\tthis.ListenerList = [];\n\t}\n\n    /**\n     * A synonym for removeAllEventListener\n     * @param event\n     */\n\tremoveAllListener(event){\n\t\tthis.removeAllEventListener(event);\n\t}\n\n\t/**\n\t *\n\t * @param {String} event\n\t * @param data\n\t */\n\temit(event, ...data){\n\t\tLog.t(this.TAG, \"emit EVENT: \" + event, ...data);\n\n\t\tfor(let i = 0; i < this.waiters.length;i++){\n\t\t\tlet entry = this.waiters[i];\n\n\t\t\tif(entry[0] === event){\n\t\t\t\tLog.d(this.TAG, \"hit waiting event: \" + event);\n\t\t\t\tentry[1].call(this, ...data);\n\t\t\t\tthis.waiters.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tfor(let i = 0; i < this.ListenerList.length;i++){\n\t\t\tlet entry = this.ListenerList[i];\n\t\t\tif(entry[0] === event){\n\t\t\t\tentry[1].call(this, ...data);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default EventEmitter;\n\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Represents an media sample (audio / video)\nexport class SampleInfo {\n\n\tconstructor(dts, pts, duration, originalDts, isSync) {\n\t\tthis.dts = dts;\n\t\tthis.pts = pts;\n\t\tthis.duration = duration;\n\t\tthis.originalDts = originalDts;\n\t\tthis.isSyncPoint = isSync;\n\t\tthis.fileposition = null;\n\t}\n\n}\n\n// Media Segment concept is defined in Media Source Extensions spec.\n// Particularly in ISO BMFF format, an Media Segment contains a moof box followed by a mdat box.\nexport class MediaSegmentInfo {\n\n\tconstructor() {\n\t\tthis.beginDts = 0;\n\t\tthis.endDts = 0;\n\t\tthis.beginPts = 0;\n\t\tthis.endPts = 0;\n\t\tthis.originalBeginDts = 0;\n\t\tthis.originalEndDts = 0;\n\t\tthis.syncPoints = [];     // SampleInfo[n], for video IDR frames only\n\t\tthis.firstSample = null;  // SampleInfo\n\t\tthis.lastSample = null;   // SampleInfo\n\t}\n\n\tappendSyncPoint(sampleInfo) {  // also called Random Access Point\n\t\tsampleInfo.isSyncPoint = true;\n\t\tthis.syncPoints.push(sampleInfo);\n\t}\n\n}\n\n// Ordered list for recording video IDR frames, sorted by originalDts\nexport class IDRSampleList {\n\n\tconstructor() {\n\t\tthis._list = [];\n\t}\n\n\tclear() {\n\t\tthis._list = [];\n\t}\n\n\tappendArray(syncPoints) {\n\t\tlet list = this._list;\n\n\t\tif (syncPoints.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (list.length > 0 && syncPoints[0].originalDts < list[list.length - 1].originalDts) {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tArray.prototype.push.apply(list, syncPoints);\n\t}\n\n\tgetLastSyncPointBeforeDts(dts) {\n\t\tif (this._list.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet list = this._list;\n\t\tlet idx = 0;\n\t\tlet last = list.length - 1;\n\t\tlet mid = 0;\n\t\tlet lbound = 0;\n\t\tlet ubound = last;\n\n\t\tif (dts < list[0].dts) {\n\t\t\tidx = 0;\n\t\t\tlbound = ubound + 1;\n\t\t}\n\n\t\twhile (lbound <= ubound) {\n\t\t\tmid = lbound + Math.floor((ubound - lbound) / 2);\n\t\t\tif (mid === last || (dts >= list[mid].dts && dts < list[mid + 1].dts)) {\n\t\t\t\tidx = mid;\n\t\t\t\tbreak;\n\t\t\t} else if (list[mid].dts < dts) {\n\t\t\t\tlbound = mid + 1;\n\t\t\t} else {\n\t\t\t\tubound = mid - 1;\n\t\t\t}\n\t\t}\n\t\treturn this._list[idx];\n\t}\n\n}\n\n// Data structure for recording information of media segments in single track.\nexport class MediaSegmentInfoList {\n\n\tconstructor(type) {\n\t\tthis._type = type;\n\t\tthis._list = [];\n\t\tthis._lastAppendLocation = -1;  // cached last insert location\n\t}\n\n\tget type() {\n\t\treturn this._type;\n\t}\n\n\tget length() {\n\t\treturn this._list.length;\n\t}\n\n\tisEmpty() {\n\t\treturn this._list.length === 0;\n\t}\n\n\tclear() {\n\t\tthis._list = [];\n\t\tthis._lastAppendLocation = -1;\n\t}\n\n\t_searchNearestSegmentBefore(originalBeginDts) {\n\t\tlet list = this._list;\n\t\tif (list.length === 0) {\n\t\t\treturn -2;\n\t\t}\n\t\tlet last = list.length - 1;\n\t\tlet mid = 0;\n\t\tlet lbound = 0;\n\t\tlet ubound = last;\n\n\t\tlet idx = 0;\n\n\t\tif (originalBeginDts < list[0].originalBeginDts) {\n\t\t\tidx = -1;\n\t\t\treturn idx;\n\t\t}\n\n\t\twhile (lbound <= ubound) {\n\t\t\tmid = lbound + Math.floor((ubound - lbound) / 2);\n\t\t\tif (mid === last || (originalBeginDts > list[mid].lastSample.originalDts &&\n\t\t\t\t(originalBeginDts < list[mid + 1].originalBeginDts))) {\n\t\t\t\tidx = mid;\n\t\t\t\tbreak;\n\t\t\t} else if (list[mid].originalBeginDts < originalBeginDts) {\n\t\t\t\tlbound = mid + 1;\n\t\t\t} else {\n\t\t\t\tubound = mid - 1;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\t_searchNearestSegmentAfter(originalBeginDts) {\n\t\treturn this._searchNearestSegmentBefore(originalBeginDts) + 1;\n\t}\n\n\tappend(mediaSegmentInfo) {\n\t\tlet list = this._list;\n\t\tlet msi = mediaSegmentInfo;\n\t\tlet lastAppendIdx = this._lastAppendLocation;\n\t\tlet insertIdx = 0;\n\n\t\tif (lastAppendIdx !== -1 && lastAppendIdx < list.length &&\n\t\t\tmsi.originalBeginDts >= list[lastAppendIdx].lastSample.originalDts &&\n\t\t\t((lastAppendIdx === list.length - 1) ||\n\t\t\t\t(lastAppendIdx < list.length - 1 &&\n\t\t\t\t\tmsi.originalBeginDts < list[lastAppendIdx + 1].originalBeginDts))) {\n\t\t\tinsertIdx = lastAppendIdx + 1;  // use cached location idx\n\t\t} else {\n\t\t\tif (list.length > 0) {\n\t\t\t\tinsertIdx = this._searchNearestSegmentBefore(msi.originalBeginDts) + 1;\n\t\t\t}\n\t\t}\n\n\t\tthis._lastAppendLocation = insertIdx;\n\t\tthis._list.splice(insertIdx, 0, msi);\n\t}\n\n\tgetLastSegmentBefore(originalBeginDts) {\n\t\tlet idx = this._searchNearestSegmentBefore(originalBeginDts);\n\t\tif (idx >= 0) {\n\t\t\treturn this._list[idx];\n\t\t} else {  // -1\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetLastSampleBefore(originalBeginDts) {\n\t\tlet segment = this.getLastSegmentBefore(originalBeginDts);\n\t\tif (segment != null) {\n\t\t\treturn segment.lastSample;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetLastSyncPointBefore(originalBeginDts) {\n\t\tlet segmentIdx = this._searchNearestSegmentBefore(originalBeginDts);\n\t\tlet syncPoints = this._list[segmentIdx].syncPoints;\n\t\twhile (syncPoints.length === 0 && segmentIdx > 0) {\n\t\t\tsegmentIdx--;\n\t\t\tsyncPoints = this._list[segmentIdx].syncPoints;\n\t\t}\n\t\tif (syncPoints.length > 0) {\n\t\t\treturn syncPoints[syncPoints.length - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RuntimeException {\n    constructor(message) {\n        this._message = message;\n    }\n\n    get name() {\n        return 'RuntimeException';\n    }\n\n    get message() {\n        return this._message;\n    }\n\n    toString() {\n        return this.name + ': ' + this.message;\n    }\n}\n\nexport class IllegalStateException extends RuntimeException {\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'IllegalStateException';\n    }\n}\n\nexport class InvalidArgumentException extends RuntimeException {\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'InvalidArgumentException';\n    }\n}\n\nexport class NotImplementedException extends RuntimeException {\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'NotImplementedException';\n    }\n}\n","\n/*\n *\n * Copyright (C) 2023 itNOX. All Rights Reserved.\n *\n * @author Michael Balen <mb@itnox.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/**\n * concat two Uint8Array\n * @param {Uint8Array} bufs\n * @returns {Uint8Array}\n */\n\nexport function _concatArrayBuffers(...bufs){\n    const result = new Uint8Array(bufs.reduce((totalSize, buf)=>totalSize+buf.byteLength,0));\n    bufs.reduce((offset, buf)=>{\n        result.set(buf,offset)\n        return offset+buf.byteLength\n    },0)\n\n    return result;\n}\n\n/**\n *\n * @param {String} str\n * @returns {*[]}\n * @private\n */\nexport function _stringToByteArray(str) {\n    const bytes = [];\n\n    for(let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        if(char > 0xFF) {\n            bytes.push(char >>> 8);\n        }\n\n        bytes.push(char & 0xFF);\n    }\n    return bytes;\n}\n\n/**\n * convert Float64 to 8 byteArray\n * @param {Number} num\n * @returns {*[]}\n * @private\n */\nexport function _numberToByteArray(num) {\n    const buffer = new ArrayBuffer(8);\n    new DataView(buffer).setFloat64(0, num, false);\n    return [].slice.call(new Uint8Array(buffer));\n}\n\n/**\n * convert 8 byte byteArray to Float64\n * @param {byte[]} ba\n * @returns {number}\n * @private\n */\nexport function _byteArrayToNumber(ba){\n    let buf = new ArrayBuffer(ba.length);\n    let view = new DataView(buf);\n\n    ba.forEach(function (b, i) {\n        view.setUint8(i, b);\n    });\n\n    return view.getFloat64(0);\n}\n\n/**\n * convert byteArray to string\n * @param {byte[]} ba\n * @returns {string}\n * @private\n */\nexport function _byteArrayToString(ba){\n    let ret = \"\";\n\n    for(let i = 0; i < ba.length; i++){\n        ret += String.fromCharCode(ba[i]);\n    }\n\n    return ret;\n}\n\nexport const defaultConfig = {\n    enableStashBuffer: true,\n    stashInitialSize: undefined,\n\n    isLive: true,\n\n    autoCleanupSourceBuffer: true,\n    autoCleanupMaxBackwardDuration: 3 * 60,\n    autoCleanupMinBackwardDuration: 2 * 60,\n\n    statisticsInfoReportInterval: 600,\n\n    fixAudioTimestampGap: true,\n\n    headers: undefined\n};\n\n\nexport const TransmuxingEvents = {\n    IO_ERROR: 'io_error',\n    DEMUX_ERROR: 'demux_error',\n    INIT_SEGMENT: 'init_segment',\n    MEDIA_SEGMENT: 'media_segment',\n    LOADING_COMPLETE: 'loading_complete',\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\n    MEDIA_INFO: 'media_info',\n    METADATA_ARRIVED: 'metadata_arrived',\n    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',\n    STATISTICS_INFO: 'statistics_info',\n    RECOMMEND_SEEKPOINT: 'recommend_seekpoint'\n};\n\nexport const DemuxErrors = {\n    OK: 'OK',\n    FORMAT_ERROR: 'FormatError',\n    FORMAT_UNSUPPORTED: 'FormatUnsupported',\n    CODEC_UNSUPPORTED: 'CodecUnsupported'\n};\n\nexport const MSEEvents = {\n    ERROR: 'error',\n    SOURCE_OPEN: 'source_open',\n    UPDATE_END: 'update_end',\n    BUFFER_FULL: 'buffer_full'\n};\n\nexport const PlayerEvents = {\n    ERROR: 'error',\n    LOADING_COMPLETE: 'loading_complete',\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\n    MEDIA_INFO: 'media_info',\n    METADATA_ARRIVED: 'metadata_arrived',\n    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',\n    STATISTICS_INFO: 'statistics_info'\n};\n\nexport const ErrorTypes = {\n    NETWORK_ERROR: 'NetworkError',\n    MEDIA_ERROR: 'MediaError',\n    OTHER_ERROR: 'OtherError'\n};\n\nexport const LoaderErrors = {\n    OK: 'OK',\n    EXCEPTION: 'Exception',\n    HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',\n    CONNECTING_TIMEOUT: 'ConnectingTimeout',\n    EARLY_EOF: 'EarlyEof',\n    UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'\n};\n\nexport const ErrorDetails = {\n    NETWORK_EXCEPTION: LoaderErrors.EXCEPTION,\n    NETWORK_STATUS_CODE_INVALID: LoaderErrors.HTTP_STATUS_CODE_INVALID,\n    NETWORK_TIMEOUT: LoaderErrors.CONNECTING_TIMEOUT,\n    NETWORK_UNRECOVERABLE_EARLY_EOF: LoaderErrors.UNRECOVERABLE_EARLY_EOF,\n\n    MEDIA_MSE_ERROR: 'MediaMSEError',\n\n    MEDIA_FORMAT_ERROR: DemuxErrors.FORMAT_ERROR,\n    MEDIA_FORMAT_UNSUPPORTED: DemuxErrors.FORMAT_UNSUPPORTED,\n    MEDIA_CODEC_UNSUPPORTED: DemuxErrors.CODEC_UNSUPPORTED\n};\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet Browser = {};\n\nfunction detect() {\n\t// modified from jquery-browser-plugin\n\n\tlet ua = self.navigator.userAgent.toLowerCase();\n\n\tlet match = /(edge)\\/([\\w.]+)/.exec(ua) ||\n\t\t/(opr)[\\/]([\\w.]+)/.exec(ua) ||\n\t\t/(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n\t\t/(iemobile)[\\/]([\\w.]+)/.exec(ua) ||\n\t\t/(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n\t\t/(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n\t\t/(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n\t\t/(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n\t\t/(msie) ([\\w.]+)/.exec(ua) ||\n\t\tua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua) ||\n\t\tua.indexOf('compatible') < 0 && /(firefox)[ \\/]([\\w.]+)/.exec(ua) ||\n\t\t[];\n\n\tlet platform_match = /(ipad)/.exec(ua) ||\n\t\t/(ipod)/.exec(ua) ||\n\t\t/(windows phone)/.exec(ua) ||\n\t\t/(iphone)/.exec(ua) ||\n\t\t/(kindle)/.exec(ua) ||\n\t\t/(android)/.exec(ua) ||\n\t\t/(windows)/.exec(ua) ||\n\t\t/(mac)/.exec(ua) ||\n\t\t/(linux)/.exec(ua) ||\n\t\t/(cros)/.exec(ua) ||\n\t\t[];\n\n\tlet matched = {\n\t\tbrowser: match[5] || match[3] || match[1] || '',\n\t\tversion: match[2] || match[4] || '0',\n\t\tmajorVersion: match[4] || match[2] || '0',\n\t\tplatform: platform_match[0] || ''\n\t};\n\n\tlet browser = {};\n\tif (matched.browser) {\n\t\tbrowser[matched.browser] = true;\n\n\t\tlet versionArray = matched.majorVersion.split('.');\n\t\tbrowser.version = {\n\t\t\tmajor: parseInt(matched.majorVersion, 10),\n\t\t\tstring: matched.version\n\t\t};\n\t\tif (versionArray.length > 1) {\n\t\t\tbrowser.version.minor = parseInt(versionArray[1], 10);\n\t\t}\n\t\tif (versionArray.length > 2) {\n\t\t\tbrowser.version.build = parseInt(versionArray[2], 10);\n\t\t}\n\t}\n\n\tif (matched.platform) {\n\t\tbrowser[matched.platform] = true;\n\t}\n\n\tif (browser.chrome || browser.opr || browser.safari) {\n\t\tbrowser.webkit = true;\n\t}\n\n\t// MSIE. IE11 has 'rv' identifer\n\tif (browser.rv || browser.iemobile) {\n\t\tif (browser.rv) {\n\t\t\tdelete browser.rv;\n\t\t}\n\t\tlet msie = 'msie';\n\t\tmatched.browser = msie;\n\t\tbrowser[msie] = true;\n\t}\n\n\t// Microsoft Edge\n\tif (browser.edge) {\n\t\tdelete browser.edge;\n\t\tlet msedge = 'msedge';\n\t\tmatched.browser = msedge;\n\t\tbrowser[msedge] = true;\n\t}\n\n\t// Opera 15+\n\tif (browser.opr) {\n\t\tlet opera = 'opera';\n\t\tmatched.browser = opera;\n\t\tbrowser[opera] = true;\n\t}\n\n\t// Stock android browsers are marked as Safari\n\tif (browser.safari && browser.android) {\n\t\tlet android = 'android';\n\t\tmatched.browser = android;\n\t\tbrowser[android] = true;\n\t}\n\n\tbrowser.name = matched.browser;\n\tbrowser.platform = matched.platform;\n\n\tfor (let key in Browser) {\n\t\tif (Browser.hasOwnProperty(key)) {\n\t\t\tdelete Browser[key];\n\t\t}\n\t}\n\tObject.assign(Browser, browser);\n}\n\ndetect();\n\nexport default Browser;\n","\nimport worker from \"!!../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"(()=>{\\\"use strict\\\";class e{static OFF=-1;static TRACE=0;static DEBUG=1;static INFO=2;static WARN=3;static ERROR=4;static CRITICAL=5;static WITH_STACKTRACE=!0;static LEVEL=e.INFO;static loglevels={};static _output=function(t,s,...a){let i=e.LEVEL;try{e.loglevels[s]&&(i=e.loglevels[s])}catch(e){return}if(i===e.OFF)return;if(i>t)return;const n=e._getStackTrace();n.shift(),n.shift();let r=\\\"color: silver\\\";switch(t){case e.TRACE:r=\\\"background-color: gray\\\";break;case e.DEBUG:break;case e.INFO:r=\\\"color: green\\\";break;case e.WARN:r=\\\"color: orange; background-color: #EAA80035\\\";break;case e.ERROR:r=\\\"color: red; background-color: #FF000020\\\";break;case e.CRITICAL:r=\\\"color: red\\\"}e._print(n,r,s,...a)};static _print(t,s,a,...i){if(e.WITH_STACKTRACE){e.LEVEL===e.ERROR?console.group(\\\"%c[\\\"+a+\\\"]\\\",s,...i):console.groupCollapsed(\\\"%c[\\\"+a+\\\"]\\\",s,...i);for(let e=0;e<t.length;e++)console.log(\\\"%c\\\"+t[e],s);console.groupEnd()}else console.log(\\\"%c[\\\"+a+\\\"]\\\",s,...i)}static _getStackTrace=function(){let e=[];try{i.dont.exist+=0}catch(t){if(t.stack){let s=t.stack.split(\\\"\\\\n\\\");for(let t=0;t<s.length;t++)e.push(s[t]);e.shift(),e.shift()}}return e};static c(t,...s){e._output(e.CRITICAL,t,...s)}static e(t,...s){e._output(e.ERROR,t,...s)}static i(t,...s){e._output(e.INFO,t,...s)}static w(t,...s){e._output(e.WARN,t,...s)}static d(t,...s){e._output(e.DEBUG,t,...s)}static v(t,...s){e._output(e.DEBUG,t,...s)}static t(t,...s){e._output(e.TRACE,t,...s)}}const t=e;function s(...e){const t=new Uint8Array(e.reduce(((e,t)=>e+t.byteLength),0));return e.reduce(((e,s)=>(t.set(s,e),e+s.byteLength)),0),t}function a(e){const t=[];for(let s=0;s<e.length;s++){const a=e.charCodeAt(s);a>255&&t.push(a>>>8),t.push(255&a)}return t}function n(e){const t=new ArrayBuffer(8);return new DataView(t).setFloat64(0,e,!1),[].slice.call(new Uint8Array(t))}function r(e){let t=new ArrayBuffer(e.length),s=new DataView(t);return e.forEach((function(e,t){s.setUint8(t,e)})),s.getFloat64(0)}function o(e){let t=\\\"\\\";for(let s=0;s<e.length;s++)t+=String.fromCharCode(e[s]);return t}const h={enableStashBuffer:!0,stashInitialSize:void 0,isLive:!0,autoCleanupSourceBuffer:!0,autoCleanupMaxBackwardDuration:180,autoCleanupMinBackwardDuration:120,statisticsInfoReportInterval:600,fixAudioTimestampGap:!0,headers:void 0},d=\\\"FormatError\\\",l=\\\"CodecUnsupported\\\",c=class{TAG=\\\"RTMPMessage\\\";static MessageTypes=[\\\"dummy\\\",\\\"PCMSetChunkSize\\\",\\\"PCMAbortMessage\\\",\\\"PCMAcknolegement\\\",\\\"UserControlMessage\\\",\\\"WindowAcknowledgementSize\\\",\\\"PCMSetPeerBandwidth\\\",\\\"dummy\\\",\\\"AudioMessage\\\",\\\"VideoMessage\\\",\\\"dummy\\\",\\\"dummy\\\",\\\"dummy\\\",\\\"dummy\\\",\\\"dummy\\\",\\\"DataMessageAMF3\\\",\\\"Shared Object Message AMF3\\\",\\\"CommandMessageAMF3\\\",\\\"DataMessageAMF0\\\",\\\"SharedObjectMessageAMF0\\\",\\\"CommandMessageAMF0\\\",\\\"dummy\\\",\\\"Aggregate Message\\\"];messageType;messageLength=0;length=0;timestamp=0;extendedTimestamp=!1;message_stream_id=0;payload=new Uint8Array(0);constructor(e){e&&(this.setMessageLength(e.length),this.addPayload(e))}clearPayload(){this.payload=new Uint8Array(0)}getBytes(){return this.header=new Uint8Array(11),this.header[0]=this.messageType,this.header[1]=this.length>>>16,this.header[2]=this.length>>>8,this.header[3]=this.length,this.header[4]=this.timestamp>>>24,this.header[5]=this.timestamp>>>16,this.header[6]=this.timestamp>>>8,this.header[7]=this.timestamp,this.header[8]=this.message_stream_id>>>16,this.header[9]=this.message_stream_id>>>8,this.header[10]=this.message_stream_id,s(this.header,this.payload)}setMessageType(e){switch(this.messageType=e,e){case 1:case 2:case 3:case 4:case 5:case 6:this.message_stream_id=0}}getMessageType(){return this.messageType}getMessageStreamID(){return this.message_stream_id}setMessageStreamID(e){this.message_stream_id=e}getPayloadlength(){return this.payload.length}getTimestamp(){return this.timestamp}setMessageTimestamp(e){t.v(this.TAG,\\\"TS: \\\"+e),this.timestamp=e}setExtendedTimestamp(e){t.w(this.TAG,\\\"setExtendedTimestamp\\\"),this.extendedTimestamp=e}getExtendedTimestamp(){return this.extendedTimestamp}setTimestampDelta(e){t.v(this.TAG,\\\"TS: \\\"+this.timestamp+\\\" Delta: \\\"+e),this.timestamp+=e}addPayload(e){e.length>this.bytesMissing()?t.e(this.TAG,\\\"try to add too much data\\\"):(this.payload=s(this.payload,e),this.length=this.payload.length,t.d(this.TAG,\\\"[ RTMPMessage ] payload size is now: \\\"+this.length))}getPayload(){return this.payload}setMessageLength(e){this.messageLength=e}getMessageLength(){return this.messageLength}isComplete(){return this.payload.length===this.messageLength}bytesMissing(){return this.messageLength-this.payload.length}},u=class{TAG=\\\"Chunk\\\";chunk_stream_id=0;length;message_type;message_stream_id=0;timestamp;CHUNK_SIZE=128;payload;constructor(e){this.payload=e.getPayload(),this.length=this.payload.length,this.message_type=e.getMessageType(),this.message_stream_id=e.getMessageStreamID()}getBytes(){let e=new Uint8Array(this.payload),a=new Uint8Array(0),i=0;do{t.d(this.TAG,\\\"create chunk: \\\"+e.length),a=s(a,this._getHeaderBytes(i),e.slice(0,this.CHUNK_SIZE)),e=e.slice(this.CHUNK_SIZE),i=3}while(e.length>0);return a}_getHeaderBytes(e){let t,a;switch(this.chunk_stream_id<63?(t=new Uint8Array(1),t[0]=e<<6|this.chunk_stream_id):this.chunk_stream_id<65599?(t=new Uint8Array(2),t[0]=e<<6,t[1]=this.chunk_stream_id-64):(t=new Uint8Array(3),t[0]=e<<6|63,t[1]=this.chunk_stream_id-64>>>8,t[2]=this.chunk_stream_id-64),e){case 0:a=new Uint8Array(11),a[0]=this.timestamp>>>16,a[1]=this.timestamp>>>8,a[2]=this.timestamp,a[3]=this.length>>>16,a[4]=this.length>>>8,a[5]=this.length,a[6]=this.message_type,a[7]=this.message_stream_id>>>24,a[8]=this.message_stream_id>>>16,a[9]=this.message_stream_id>>>8,a[10]=this.message_stream_id;break;case 1:a=new Uint8Array(7),a[0]=this.timestamp>>>16,a[1]=this.timestamp>>>8,a[2]=this.timestamp,a[3]=this.length>>>16,a[4]=this.length>>>8,a[5]=this.length,a[6]=this.message_type;break;case 2:a=new Uint8Array(3),a[0]=this.timestamp>>>16,a[1]=this.timestamp>>>8,a[2]=this.timestamp;break;case 3:a=new Uint8Array(0)}return s(t,a)}getPayload(){return this.payload}getMessageType(){return this.message_type}getMessageStreamID(){return this.message_stream_id}setChunkSize(e){this.CHUNK_SIZE=e}setChunkStreamID(e){t.d(this.TAG,\\\"setChunkStreamID:\\\"+e),this.chunk_stream_id=e}setMessageStreamID(e){this.message_stream_id=e}setTimestamp(e){this.timestamp=e}};class m{event_type;event_data1;event_data2;static events=[\\\"StreamBegin\\\",\\\"StreamEOF\\\",\\\"StreamDry\\\",\\\"SetBuffer\\\",\\\"StreamIsRecorded\\\",\\\"dummy\\\",\\\"PingRequest\\\",\\\"PingResponse\\\"];getBytes(){let e;return this.event_data2?(e=new Uint8Array(10),e[0]=this.event_type>>>8,e[1]=this.event_type,e[2]=this.event_data1>>>24,e[3]=this.event_data1>>>16,e[4]=this.event_data1>>>8,e[5]=this.event_data1,e[6]=this.event_data2>>>24,e[7]=this.event_data2>>>16,e[8]=this.event_data2>>>8,e[9]=this.event_data2):(e=new Uint8Array(6),e[0]=this.event_type>>>8,e[1]=this.event_type,e[2]=this.event_data1>>>24,e[3]=this.event_data1>>>16,e[4]=this.event_data1>>>8,e[5]=this.event_data1),e}getEventMessage(){let e={};return 3===this.event_type?e[m.events[this.event_type]]=[this.event_data1,this.event_data2]:e[m.events[this.event_type]]=this.event_data1,e}setType(e){this.event_type=e}setEventData(e){this.event_data1=e}}const g=m;class p{TAG=\\\"ProtocolControlMessage\\\";pcm_type;data;static pcm_types=[\\\"dummy\\\",\\\"SetChunkSize\\\",\\\"AbortMessage\\\",\\\"Acknowledgement\\\",\\\"UserControlMessage\\\",\\\"WindowAcknowledgementSize\\\",\\\"SetPeerBandwidth\\\"];constructor(e,s){switch(e){case 1:case 2:case 3:case 5:this.pcm_type=e,this.data=s[0]<<24|s[1]<<16|s[2]<<8|s[3];break;case 6:t.w(this.TAG,\\\"Protocol Control Message Type: \\\"+e+\\\" use SetPeerBandwidthMessage\\\");break;default:t.e(this.TAG,\\\"Protocol Control Message Type: \\\"+e+\\\" not supported\\\")}}setPayload(e){this.data=e}getEventMessage(){let e={};return e[p.pcm_types[this.pcm_type]]=this.data,e}getBytes(){let e=[];return e[0]=this.data>>>24,e[1]=this.data>>>16,e[2]=this.data>>>8,e[3]=this.data,new Uint8Array(e)}}const _=p;class f{constructor(e){this._message=e}get name(){return\\\"RuntimeException\\\"}get message(){return this._message}toString(){return this.name+\\\": \\\"+this.message}}class y extends f{constructor(e){super(e)}get name(){return\\\"IllegalStateException\\\"}}class A extends f{constructor(e){super(e)}get name(){return\\\"InvalidArgumentException\\\"}}function S(e,t,s){let a=e;if(t+s<a.length){for(;s--;)if(128!=(192&a[++t]))return!1;return!0}return!1}function v(e){let t=[],s=e,a=0,i=e.length;for(;a<i;)if(s[a]<128)t.push(String.fromCharCode(s[a])),++a;else{if(s[a]<192);else if(s[a]<224){if(S(s,a,1)){let e=(31&s[a])<<6|63&s[a+1];if(e>=128){t.push(String.fromCharCode(65535&e)),a+=2;continue}}}else if(s[a]<240){if(S(s,a,2)){let e=(15&s[a])<<12|(63&s[a+1])<<6|63&s[a+2];if(e>=2048&&55296!=(63488&e)){t.push(String.fromCharCode(65535&e)),a+=3;continue}}}else if(s[a]<248&&S(s,a,3)){let e=(7&s[a])<<18|(63&s[a+1])<<12|(63&s[a+2])<<6|63&s[a+3];if(e>65536&&e<1114112){e-=65536,t.push(String.fromCharCode(e>>>10|55296)),t.push(String.fromCharCode(1023&e|56320)),a+=4;continue}}t.push(String.fromCharCode(65533)),++a}return t.join(\\\"\\\")}let w=function(){let e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]}();class b{static TAG=\\\"AMF\\\";static parseScriptData(e){t.d(this.TAG,e);let s={};try{let a=b.parseValue(e);t.d(this.TAG,a);let i=b.parseValue(e.slice(a.size));t.d(this.TAG,i),s[a.data]=i.data}catch(e){t.w(this.TAG,e.toString())}return s}static parseObject(e){if(e.length<3)throw new y(\\\"Data not enough when parse ScriptDataObject\\\");let t=b.parseString(e),s=b.parseValue(e.slice(t.size,e.length-t.size)),a=s.objectEnd;return{data:{name:t.data,value:s.data},size:t.size+s.size,objectEnd:a}}static parseVariable(e){return b.parseObject(e)}static parseString(e){if(e.length<2)throw new y(\\\"Data not enough when parse String\\\");let t,s=new DataView(e.buffer).getUint16(0,!w);return t=s>0?v(new Uint8Array(e.slice(2,2+s))):\\\"\\\",{data:t,size:2+s}}static parseLongString(e){if(e.length()<4)throw new y(\\\"Data not enough when parse LongString\\\");let t,s=new DataView(e.buffer).getUint32(0,!w);return t=s>0?v(new Uint8Array(e.slice(4,4+s))):\\\"\\\",{data:t,size:4+s}}static parseDate(e){if(e.length()<10)throw new y(\\\"Data size invalid when parse Date\\\");let t=new DataView(e.buffer),s=t.getFloat64(0,!w);return s+=60*t.getInt16(8,!w)*1e3,{data:new Date(s),size:10}}static parseValue(e){if(e.length<1)throw new y(\\\"Data not enough when parse Value\\\");let s,a=new DataView(e.buffer),i=1,n=a.getUint8(0),r=!1;try{switch(n){case 0:s=a.getFloat64(1,!w),i+=8;break;case 1:s=!!a.getUint8(1),i+=1;break;case 2:{let t=b.parseString(e.slice(1));s=t.data,i+=t.size;break}case 3:{s={};let t=0;for(9==(16777215&a.getUint32(e.length-4,!w))&&(t=3);i<e.length-4;){let a=b.parseObject(e.slice(i,i+e.length-t));if(a.objectEnd)break;s[a.data.name]=a.data.value,i+=a.size}i<=e.length-3&&9==(16777215&a.getUint32(i-1,!w))&&(i+=3);break}case 8:{s={},i+=4;let t=0;for(9==(16777215&a.getUint32(e.length-4,!w))&&(t=3);i<e.length-8;){let a=b.parseVariable(e.slice(i,i+e.length-t));if(a.objectEnd)break;s[a.data.name]=a.data.value,i+=a.size}i<=e.length-3&&9==(16777215&a.getUint32(i-1,!w))&&(i+=3);break}case 9:s=void 0,i=1,r=!0;break;case 10:{s=[];let t=a.getUint32(1,!w);i+=4;for(let a=0;a<t;a++){let t=b.parseValue(e.slice(i,e.length));s.push(t.data),i+=t.size}break}case 11:{let t=b.parseDate(e.slice(1));s=t.data,i+=t.size;break}case 12:{let t=b.parseString(e.slice(1));s=t.data,i+=t.size;break}default:i=e.length,t.w(this.TAG,\\\"Unsupported AMF value type \\\"+n)}}catch(e){t.e(this.TAG,e.toString())}return{data:s,size:i,objectEnd:r}}}const T=b;class M{static _ebsp2rbsp(e){let t=e,s=t.byteLength,a=new Uint8Array(s),i=0;for(let e=0;e<s;e++)e>=2&&3===t[e]&&0===t[e-1]&&0===t[e-2]||(a[i]=t[e],i++);return new Uint8Array(a.buffer,0,i)}static parseSPS(e){let t=M._ebsp2rbsp(e),s=new class{constructor(e){this.TAG=\\\"ExpGolomb\\\",this._buffer=e,this._buffer_index=0,this._total_bytes=e.byteLength,this._total_bits=8*e.byteLength,this._current_word=0,this._current_word_bits_left=0}destroy(){this._buffer=null}_fillCurrentWord(){let e=this._total_bytes-this._buffer_index;if(e<=0)throw new y(\\\"ExpGolomb: _fillCurrentWord() but no bytes available\\\");let t=Math.min(4,e),s=new Uint8Array(4);s.set(this._buffer.subarray(this._buffer_index,this._buffer_index+t)),this._current_word=new DataView(s.buffer).getUint32(0,!1),this._buffer_index+=t,this._current_word_bits_left=8*t}readBits(e){if(e>32)throw new A(\\\"ExpGolomb: readBits() bits exceeded max 32bits!\\\");if(e<=this._current_word_bits_left){let t=this._current_word>>>32-e;return this._current_word<<=e,this._current_word_bits_left-=e,t}let t=this._current_word_bits_left?this._current_word:0;t>>>=32-this._current_word_bits_left;let s=e-this._current_word_bits_left;this._fillCurrentWord();let a=Math.min(s,this._current_word_bits_left),i=this._current_word>>>32-a;return this._current_word<<=a,this._current_word_bits_left-=a,t=t<<a|i,t}readBool(){return 1===this.readBits(1)}readByte(){return this.readBits(8)}_skipLeadingZero(){let e;for(e=0;e<this._current_word_bits_left;e++)if(0!=(this._current_word&2147483648>>>e))return this._current_word<<=e,this._current_word_bits_left-=e,e;return this._fillCurrentWord(),e+this._skipLeadingZero()}readUEG(){let e=this._skipLeadingZero();return this.readBits(e+1)-1}readSEG(){let e=this.readUEG();return 1&e?e+1>>>1:-1*(e>>>1)}}(t);s.readByte();let a=s.readByte();s.readByte();let i=s.readByte();s.readUEG();let n=M.getProfileString(a),r=M.getLevelString(i),o=1,h=420,d=8;if((100===a||110===a||122===a||244===a||44===a||83===a||86===a||118===a||128===a||138===a||144===a)&&(o=s.readUEG(),3===o&&s.readBits(1),o<=3&&(h=[0,420,422,444][o]),d=s.readUEG()+8,s.readUEG(),s.readBits(1),s.readBool())){let e=3!==o?8:12;for(let t=0;t<e;t++)s.readBool()&&(t<6?M._skipScalingList(s,16):M._skipScalingList(s,64))}s.readUEG();let l=s.readUEG();if(0===l)s.readUEG();else if(1===l){s.readBits(1),s.readSEG(),s.readSEG();let e=s.readUEG();for(let t=0;t<e;t++)s.readSEG()}let c=s.readUEG();s.readBits(1);let u=s.readUEG(),m=s.readUEG(),g=s.readBits(1);0===g&&s.readBits(1),s.readBits(1);let p=0,_=0,f=0,S=0;s.readBool()&&(p=s.readUEG(),_=s.readUEG(),f=s.readUEG(),S=s.readUEG());let v=1,w=1,b=0,T=!0,k=0,D=0;if(s.readBool()){if(s.readBool()){let e=s.readByte();e>0&&e<16?(v=[1,12,10,16,40,24,20,32,80,18,15,64,160,4,3,2][e-1],w=[1,11,11,11,33,11,11,11,33,11,11,33,99,3,2,1][e-1]):255===e&&(v=s.readByte()<<8|s.readByte(),w=s.readByte()<<8|s.readByte())}if(s.readBool()&&s.readBool(),s.readBool()&&(s.readBits(4),s.readBool()&&s.readBits(24)),s.readBool()&&(s.readUEG(),s.readUEG()),s.readBool()){let e=s.readBits(32),t=s.readBits(32);T=s.readBool(),k=t,D=2*e,b=k/D}}let C=1;1===v&&1===w||(C=v/w);let I=0,x=0;0===o?(I=1,x=2-g):(I=3===o?1:2,x=(1===o?2:1)*(2-g));let G=16*(u+1),U=16*(m+1)*(2-g);G-=(p+_)*I,U-=(f+S)*x;let R=Math.ceil(G*C);return s.destroy(),s=null,{profile_string:n,level_string:r,bit_depth:d,ref_frames:c,chroma_format:h,chroma_format_string:M.getChromaFormatString(h),frame_rate:{fixed:T,fps:b,fps_den:D,fps_num:k},sar_ratio:{width:v,height:w},codec_size:{width:G,height:U},present_size:{width:R,height:U}}}static _skipScalingList(e,t){let s=8,a=8,i=0;for(let n=0;n<t;n++)0!==a&&(i=e.readSEG(),a=(s+i+256)%256),s=0===a?s:a}static getProfileString(e){switch(e){case 66:return\\\"Baseline\\\";case 77:return\\\"Main\\\";case 88:return\\\"Extended\\\";case 100:return\\\"High\\\";case 110:return\\\"High10\\\";case 122:return\\\"High422\\\";case 244:return\\\"High444\\\";default:return\\\"Unknown\\\"}}static getLevelString(e){return(e/10).toFixed(1)}static getChromaFormatString(e){switch(e){case 420:return\\\"4:2:0\\\";case 422:return\\\"4:2:2\\\";case 444:return\\\"4:4:4\\\";default:return\\\"Unknown\\\"}}}const k=M;class D{static init(){D.types={avc1:[],avcC:[],btrt:[],dinf:[],dref:[],esds:[],ftyp:[],hdlr:[],mdat:[],mdhd:[],mdia:[],mfhd:[],minf:[],moof:[],moov:[],mp4a:[],mvex:[],mvhd:[],sdtp:[],stbl:[],stco:[],stsc:[],stsd:[],stsz:[],stts:[],tfdt:[],tfhd:[],traf:[],trak:[],trun:[],trex:[],tkhd:[],vmhd:[],smhd:[],\\\".mp3\\\":[]};for(let e in D.types)D.types.hasOwnProperty(e)&&(D.types[e]=[e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]);let e=D.constants={};e.FTYP=new Uint8Array([105,115,111,109,0,0,0,1,105,115,111,109,97,118,99,49]),e.STSD_PREFIX=new Uint8Array([0,0,0,0,0,0,0,1]),e.STTS=new Uint8Array([0,0,0,0,0,0,0,0]),e.STSC=e.STCO=e.STTS,e.STSZ=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0]),e.HDLR_VIDEO=new Uint8Array([0,0,0,0,0,0,0,0,118,105,100,101,0,0,0,0,0,0,0,0,0,0,0,0,86,105,100,101,111,72,97,110,100,108,101,114,0]),e.HDLR_AUDIO=new Uint8Array([0,0,0,0,0,0,0,0,115,111,117,110,0,0,0,0,0,0,0,0,0,0,0,0,83,111,117,110,100,72,97,110,100,108,101,114,0]),e.DREF=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,12,117,114,108,32,0,0,0,1]),e.SMHD=new Uint8Array([0,0,0,0,0,0,0,0]),e.VMHD=new Uint8Array([0,0,0,1,0,0,0,0,0,0,0,0])}static box(e){let t,s=8,a=Array.prototype.slice.call(arguments,1),i=a.length;for(let e=0;e<i;e++)s+=a[e].byteLength;t=new Uint8Array(s),t[0]=s>>>24&255,t[1]=s>>>16&255,t[2]=s>>>8&255,t[3]=255&s,t.set(e,4);let n=8;for(let e=0;e<i;e++)t.set(a[e],n),n+=a[e].byteLength;return t}static generateInitSegment(e){let t=D.box(D.types.ftyp,D.constants.FTYP),s=D.moov(e),a=new Uint8Array(t.byteLength+s.byteLength);return a.set(t,0),a.set(s,t.byteLength),a}static moov(e){let t=D.mvhd(e.timescale,e.duration),s=D.trak(e),a=D.mvex(e);return D.box(D.types.moov,t,s,a)}static mvhd(e,t){return D.box(D.types.mvhd,new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,e>>>24&255,e>>>16&255,e>>>8&255,255&e,t>>>24&255,t>>>16&255,t>>>8&255,255&t,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255]))}static trak(e){return D.box(D.types.trak,D.tkhd(e),D.mdia(e))}static tkhd(e){let t=e.id,s=e.duration,a=e.presentWidth,i=e.presentHeight;return D.box(D.types.tkhd,new Uint8Array([0,0,0,7,0,0,0,0,0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,0,0,0,0,s>>>24&255,s>>>16&255,s>>>8&255,255&s,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,a>>>8&255,255&a,0,0,i>>>8&255,255&i,0,0]))}static mdia(e){return D.box(D.types.mdia,D.mdhd(e),D.hdlr(e),D.minf(e))}static mdhd(e){let t=e.timescale,s=e.duration;return D.box(D.types.mdhd,new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,s>>>24&255,s>>>16&255,s>>>8&255,255&s,85,196,0,0]))}static hdlr(e){let t;return t=\\\"audio\\\"===e.type?D.constants.HDLR_AUDIO:D.constants.HDLR_VIDEO,D.box(D.types.hdlr,t)}static minf(e){let t;return t=\\\"audio\\\"===e.type?D.box(D.types.smhd,D.constants.SMHD):D.box(D.types.vmhd,D.constants.VMHD),D.box(D.types.minf,t,D.dinf(),D.stbl(e))}static dinf(){return D.box(D.types.dinf,D.box(D.types.dref,D.constants.DREF))}static stbl(e){return D.box(D.types.stbl,D.stsd(e),D.box(D.types.stts,D.constants.STTS),D.box(D.types.stsc,D.constants.STSC),D.box(D.types.stsz,D.constants.STSZ),D.box(D.types.stco,D.constants.STCO))}static stsd(e){return\\\"audio\\\"===e.type?\\\"mp3\\\"===e.codec?D.box(D.types.stsd,D.constants.STSD_PREFIX,D.mp3(e)):D.box(D.types.stsd,D.constants.STSD_PREFIX,D.mp4a(e)):D.box(D.types.stsd,D.constants.STSD_PREFIX,D.avc1(e))}static mp3(e){let t=e.channelCount,s=e.audioSampleRate,a=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,t,0,16,0,0,0,0,s>>>8&255,255&s,0,0]);return D.box(D.types[\\\".mp3\\\"],a)}static mp4a(e){let t=e.channelCount,s=e.audioSampleRate,a=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,t,0,16,0,0,0,0,s>>>8&255,255&s,0,0]);return D.box(D.types.mp4a,a,D.esds(e))}static esds(e){let t=e.config||[],s=t.length,a=new Uint8Array([0,0,0,0,3,23+s,0,1,0,4,15+s,64,21,0,0,0,0,0,0,0,0,0,0,0,5].concat([s]).concat(t).concat([6,1,2]));return D.box(D.types.esds,a)}static avc1(e){let t=e.avcc,s=e.codecWidth,a=e.codecHeight,i=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,s>>>8&255,255&s,a>>>8&255,255&a,0,72,0,0,0,72,0,0,0,0,0,0,0,1,10,120,113,113,47,102,108,118,46,106,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,255,255]);return D.box(D.types.avc1,i,D.box(D.types.avcC,t))}static mvex(e){return D.box(D.types.mvex,D.trex(e))}static trex(e){let t=e.id,s=new Uint8Array([0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1]);return D.box(D.types.trex,s)}static moof(e,t){return D.box(D.types.moof,D.mfhd(e.sequenceNumber),D.traf(e,t))}static mfhd(e){let t=new Uint8Array([0,0,0,0,e>>>24&255,e>>>16&255,e>>>8&255,255&e]);return D.box(D.types.mfhd,t)}static traf(e,t){let s=e.id,a=D.box(D.types.tfhd,new Uint8Array([0,0,0,0,s>>>24&255,s>>>16&255,s>>>8&255,255&s])),i=D.box(D.types.tfdt,new Uint8Array([0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t])),n=D.sdtp(e),r=D.trun(e,n.byteLength+16+16+8+16+8+8);return D.box(D.types.traf,a,i,r,n)}static sdtp(e){let t=e.samples||[],s=t.length,a=new Uint8Array(4+s);for(let e=0;e<s;e++){let s=t[e].flags;a[e+4]=s.isLeading<<6|s.dependsOn<<4|s.isDependedOn<<2|s.hasRedundancy}return D.box(D.types.sdtp,a)}static trun(e,t){let s=e.samples||[],a=s.length,i=12+16*a,n=new Uint8Array(i);t+=8+i,n.set([0,0,15,1,a>>>24&255,a>>>16&255,a>>>8&255,255&a,t>>>24&255,t>>>16&255,t>>>8&255,255&t],0);for(let e=0;e<a;e++){let t=s[e].duration,a=s[e].size,i=s[e].flags,r=s[e].cts;n.set([t>>>24&255,t>>>16&255,t>>>8&255,255&t,a>>>24&255,a>>>16&255,a>>>8&255,255&a,i.isLeading<<2|i.dependsOn,i.isDependedOn<<6|i.hasRedundancy<<4|i.isNonSync,0,0,r>>>24&255,r>>>16&255,r>>>8&255,255&r],12+16*e)}return D.box(D.types.trun,n)}static mdat(e){return D.box(D.types.mdat,e)}}D.init();const C=D;class I{constructor(e,t,s,a,i){this.dts=e,this.pts=t,this.duration=s,this.originalDts=a,this.isSyncPoint=i,this.fileposition=null}}class x{constructor(){this.beginDts=0,this.endDts=0,this.beginPts=0,this.endPts=0,this.originalBeginDts=0,this.originalEndDts=0,this.syncPoints=[],this.firstSample=null,this.lastSample=null}appendSyncPoint(e){e.isSyncPoint=!0,this.syncPoints.push(e)}}class G{constructor(e){this._type=e,this._list=[],this._lastAppendLocation=-1}get type(){return this._type}get length(){return this._list.length}isEmpty(){return 0===this._list.length}clear(){this._list=[],this._lastAppendLocation=-1}_searchNearestSegmentBefore(e){let t=this._list;if(0===t.length)return-2;let s=t.length-1,a=0,i=0,n=s,r=0;if(e<t[0].originalBeginDts)return r=-1,r;for(;i<=n;){if(a=i+Math.floor((n-i)/2),a===s||e>t[a].lastSample.originalDts&&e<t[a+1].originalBeginDts){r=a;break}t[a].originalBeginDts<e?i=a+1:n=a-1}return r}_searchNearestSegmentAfter(e){return this._searchNearestSegmentBefore(e)+1}append(e){let t=this._list,s=e,a=this._lastAppendLocation,i=0;-1!==a&&a<t.length&&s.originalBeginDts>=t[a].lastSample.originalDts&&(a===t.length-1||a<t.length-1&&s.originalBeginDts<t[a+1].originalBeginDts)?i=a+1:t.length>0&&(i=this._searchNearestSegmentBefore(s.originalBeginDts)+1),this._lastAppendLocation=i,this._list.splice(i,0,s)}getLastSegmentBefore(e){let t=this._searchNearestSegmentBefore(e);return t>=0?this._list[t]:null}getLastSampleBefore(e){let t=this.getLastSegmentBefore(e);return null!=t?t.lastSample:null}getLastSyncPointBefore(e){let t=this._searchNearestSegmentBefore(e),s=this._list[t].syncPoints;for(;0===s.length&&t>0;)t--,s=this._list[t].syncPoints;return s.length>0?s[s.length-1]:null}}const U=class{static getSilentFrame(e,t){if(\\\"mp4a.40.2\\\"===e){if(1===t)return new Uint8Array([0,200,0,128,35,128]);if(2===t)return new Uint8Array([33,0,73,144,2,25,0,35,128]);if(3===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,142]);if(4===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,128,44,128,8,2,56]);if(5===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,56]);if(6===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,0,178,0,32,8,224])}else{if(1===t)return new Uint8Array([1,64,34,128,163,78,230,128,186,8,0,0,0,28,6,241,193,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(2===t)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(3===t)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94])}return null}};let R={};!function(){let e=self.navigator.userAgent.toLowerCase(),t=/(edge)\\\\/([\\\\w.]+)/.exec(e)||/(opr)[\\\\/]([\\\\w.]+)/.exec(e)||/(chrome)[ \\\\/]([\\\\w.]+)/.exec(e)||/(iemobile)[\\\\/]([\\\\w.]+)/.exec(e)||/(version)(applewebkit)[ \\\\/]([\\\\w.]+).*(safari)[ \\\\/]([\\\\w.]+)/.exec(e)||/(webkit)[ \\\\/]([\\\\w.]+).*(version)[ \\\\/]([\\\\w.]+).*(safari)[ \\\\/]([\\\\w.]+)/.exec(e)||/(webkit)[ \\\\/]([\\\\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \\\\/]([\\\\w.]+)/.exec(e)||/(msie) ([\\\\w.]+)/.exec(e)||e.indexOf(\\\"trident\\\")>=0&&/(rv)(?::| )([\\\\w.]+)/.exec(e)||e.indexOf(\\\"compatible\\\")<0&&/(firefox)[ \\\\/]([\\\\w.]+)/.exec(e)||[],s=/(ipad)/.exec(e)||/(ipod)/.exec(e)||/(windows phone)/.exec(e)||/(iphone)/.exec(e)||/(kindle)/.exec(e)||/(android)/.exec(e)||/(windows)/.exec(e)||/(mac)/.exec(e)||/(linux)/.exec(e)||/(cros)/.exec(e)||[],a={browser:t[5]||t[3]||t[1]||\\\"\\\",version:t[2]||t[4]||\\\"0\\\",majorVersion:t[4]||t[2]||\\\"0\\\",platform:s[0]||\\\"\\\"},i={};if(a.browser){i[a.browser]=!0;let e=a.majorVersion.split(\\\".\\\");i.version={major:parseInt(a.majorVersion,10),string:a.version},e.length>1&&(i.version.minor=parseInt(e[1],10)),e.length>2&&(i.version.build=parseInt(e[2],10))}if(a.platform&&(i[a.platform]=!0),(i.chrome||i.opr||i.safari)&&(i.webkit=!0),i.rv||i.iemobile){i.rv&&delete i.rv;let e=\\\"msie\\\";a.browser=e,i[e]=!0}if(i.edge){delete i.edge;let e=\\\"msedge\\\";a.browser=e,i[e]=!0}if(i.opr){let e=\\\"opera\\\";a.browser=e,i[e]=!0}if(i.safari&&i.android){let e=\\\"android\\\";a.browser=e,i[e]=!0}i.name=a.browser,i.platform=a.platform;for(let e in R)R.hasOwnProperty(e)&&delete R[e];Object.assign(R,i)}();const B=R,E=class{TAG=\\\"AMF0Object\\\";data;params;constructor(e){e&&(this.params=e,t.d(this.TAG,\\\"cmd: \\\"+this.params[0]))}parseAMF0(e){this.data=Array.from(e);let s=[];for(;this.data.length>0;){const e=this.data.shift();switch(e){case 0:s.push(r(this.data.slice(0,8))),this.data=this.data.slice(8);break;case 1:0===this.data.shift()?s.push(!1):s.push(!0);break;case 2:let a=this.data[0]<<8|this.data[1];this.data=this.data.slice(2),s.push(o(this.data.slice(0,a))),this.data=this.data.slice(a);break;case 3:s.push(this._parseAMF0Object());break;case 5:s.push(null);break;default:t.w(this.TAG,\\\"var_type: \\\"+e+\\\" not yet implemented\\\")}}return this.params=s,s}_parseAMF0Object(){let e={};for(;this.data.length>0;){let s=this.data[0]<<8|this.data[1];if(this.data=this.data.slice(2),0===s&&9===this.data[0])return this.data=this.data.slice(1),e;let a=o(this.data.slice(0,s));this.data=this.data.slice(s);const i=this.data.shift();switch(i){case 0:e[a]=r(this.data.slice(0,8)),this.data=this.data.slice(8);break;case 1:0===this.data.shift()?e[a]=!1:e[a]=!0;break;case 2:let s=this.data[0]<<8|this.data[1];this.data=this.data.slice(2),e[a]=o(this.data.slice(0,s)),this.data=this.data.slice(s);break;case 5:e[a]=null;break;default:t.w(this.TAG,\\\"var_type: \\\"+i+\\\" not yet implemented\\\")}}return e}getBytes(){let e=[];for(let s=0;s<this.params.length;s++){const i=this.params[s];switch(typeof i){case\\\"string\\\":e.push(2),e.push(i.length>>>8),e.push(i.length),e=e.concat(a(i));break;case\\\"number\\\":e.push(0),e=e.concat(n(i));break;case\\\"object\\\":e.push(3);for(let s in i){let r=i[s],o=s.length;switch(e.push(o>>>8),e.push(o),e=e.concat(a(s)),typeof r){case\\\"object\\\":null==r&&e.push(5);break;case\\\"string\\\":const s=r.length;e.push(2),e.push(s>>>8),e.push(s),e=e.concat(a(r));break;case\\\"number\\\":e.push(0),e=e.concat(n(r));break;case\\\"boolean\\\":e.push(1),r?e.push(1):e.push(0);break;default:t.w(this.TAG,typeof r,\\\" not yet implementd\\\")}}e.push(0),e.push(0),e.push(9);break;case\\\"boolean\\\":e.push(1),i?e.push(1):e.push(0);break;default:t.w(this.TAG,typeof i,\\\" not yet implementd\\\")}}return new Uint8Array(e)}getCommand(){return this.params[0]}getTransactionId(){return this.params[1]}getCommandObject(){return this.params[2]}getAdditionalInfo(){return this.params[3]}},L=\\\"WebRTMP Worker\\\";let P,F,V;t.LEVEL=t.DEBUG;const N=new class{TAG=\\\"WSSConnectionManager\\\";host;port;wss;open(e,s,a){this.host=e,t.v(this.TAG,\\\"connecting to: \\\"+e+\\\":\\\"+s),this.wss=new WebSocket(\\\"wss://\\\"+e+\\\":\\\"+s+\\\"/\\\"),this.wss.binaryType=\\\"arraybuffer\\\",this.wss.onopen=e=>{t.v(this.TAG,e),a(!0)},this.wss.onclose=e=>{t.w(this.TAG,e),postMessage([\\\"ConnectionLost\\\"])},this.wss.onerror=e=>{t.e(this.TAG,e),a(!1)}}registerMessageHandler(e){this.wss.onmessage=e}getSocket(){return this.wss}getHost(){return this.host}close(){this.wss.close()}};self.addEventListener(\\\"message\\\",(function(e){let a=e.data;switch(t.d(L,\\\"CMD: \\\"+a.cmd),a.cmd){case\\\"open\\\":F=a.host,P=a.port,N.open(F,P,(e=>{if(t.v(L,\\\"open: \\\"+F+\\\":\\\"+P),e){t.v(L,\\\"WSSConnected\\\"),postMessage([\\\"WSSConnected\\\"]);const e=new class{TAG=\\\"RTMPHandshake\\\";state=0;onHandshakeDone=null;c1;c2;constructor(e){this.socket=e,this.socket.onmessage=e=>{t.v(this.TAG,e.data),this.processServerInput(new Uint8Array(e.data))}}do(){this.onHandshakeDone?(t.v(this.TAG,\\\"send C0\\\"),this.socket.send(new Uint8Array([3])),this.state=1,t.v(this.TAG,\\\"send C1\\\"),this.socket.send(this._generateC1()),this.state=2):t.e(this.TAG,\\\"onHandshakeDone not defined\\\")}_generateC1(){const e=new Uint8Array(1536);for(let t=0;t<e.length;t++)e[t]=Math.floor(256*Math.random());let t=Math.round(Date.now()/1e3);return e[0]=t>>>24,e[1]=t>>>16,e[2]=t>>>8,e[3]=t,e[4]=0,e[5]=0,e[6]=0,e[7]=0,this.c1=e,e}_generateC2(e){return this.c2=e,this.c2}_parseS0(e){t.v(this.TAG,\\\"S0: \\\",e),3!==e[0]?t.e(this.TAG,\\\"S0 response not 0x03\\\"):t.v(this.TAG,\\\"1st Byte OK\\\"),this.state=3,e.length>1&&(t.v(this.TAG,\\\"S1 included\\\"),this._parseS1(e.slice(1)))}_parseS1(e){t.v(this.TAG,\\\"parse S1: \\\",e),this.state=4;let s=e.slice(0,1536);t.v(this.TAG,\\\"send C2\\\"),this.socket.send(this._generateC2(s)),this.state=5,e.length>1536&&(t.v(this.TAG,\\\"S2 included: \\\"+e.length),this._parseS2(e.slice(1536)))}_parseS2(e){if(t.v(this.TAG,\\\"parse S2: \\\",e),!this._compare(this.c1,e))return t.e(this.TAG,\\\"C1 S1 not equal\\\"),void this.onHandshakeDone(!1);this.state=6,t.v(this.TAG,\\\"RTMP Connection established\\\"),this.onHandshakeDone(!0)}_compare(e,t){for(let s=0;s<e.length;s++)if(e[s]!==t[s])return!1;return!0}processServerInput(e){switch(this.state){case 2:this._parseS0(e);break;case 3:this._parseS1(e);break;case 5:this._parseS2(e)}}}(N.getSocket());e.onHandshakeDone=e=>{e?(V=new class{TAG=\\\"RTMPMessageHandler\\\";paused=!1;netconnections={};chunk_stream_id=2;trackedCommand=\\\"\\\";socket;current_stream_id;constructor(e){this.socket=e,this.chunk_parser=new class{TAG=\\\"ChunkParser\\\";static CHUNK_SIZE=128;_chunkstreams=[];_buffer=new Uint8Array(0);constructor(e){this.conn_worker=e}parseChunk(e){let a,i,n;this._buffer=s(this._buffer,e);do{t.d(this.TAG,\\\"buffer length: \\\"+this._buffer.length),this._buffer.length<100&&t.d(this.TAG,this._buffer);let e=this._buffer,s=0,r=0,o=0;n=(192&e[0])>>>6;let h,d=63&e[s++];switch(0===d?d=e[s++]+64:1===d&&(d=256*e[s++]+e[s++]+64),t.d(this.TAG,\\\"chunk type: \\\",n,\\\" StreamID: \\\"+d),n){case 0:i=e[s++]<<16|e[s++]<<8|e[s++],r=e[s++]<<16|e[s++]<<8|e[s++],a=new c,a.setMessageType(e[s++]),a.setMessageStreamID(e[s++]<<24|e[s++]<<16|e[s++]<<8|e[s++]),a.setMessageLength(r),16777215===i&&(i=e[s++]<<24|e[s++]<<16|e[s++]<<8|e[s++],a.setExtendedTimestamp(!0)),a.setMessageTimestamp(i),t.d(this.TAG,\\\"message_length: \\\"+r),this._chunkstreams[d]=a;break;case 1:i=e[s++]<<16|e[s++]<<8|e[s++],r=e[s++]<<16|e[s++]<<8|e[s++],a=this._chunkstreams[d],a.setMessageType(e[s++]),a.setMessageLength(r),16777215===i?(i=e[s++]<<24|e[s++]<<16|e[s++]<<8|e[s++],a.setExtendedTimestamp(!0)):a.setExtendedTimestamp(!1),a.setTimestampDelta(i),t.d(this.TAG,\\\"message_length: \\\"+r),this._chunkstreams[d]=a;break;case 2:i=e[s++]<<16|e[s++]<<8|e[s++],a=this._chunkstreams[d],16777215===i?(i=e[s++]<<24|e[s++]<<16|e[s++]<<8|e[s++],a.setExtendedTimestamp(!0)):a.setExtendedTimestamp(!1),a.setTimestampDelta(i);break;case 3:a=this._chunkstreams[d],a.getExtendedTimestamp()&&(i=e[s++]<<24|e[s++]<<16|e[s++]<<8|e[s++],a.setTimestampDelta(i))}if(a||t.e(this.TAG,\\\"No suitable RTMPMessage found\\\"),o=this._chunkstreams[d].bytesMissing(),o>this.CHUNK_SIZE&&(o=this.CHUNK_SIZE),h=e.slice(s,s+o),h.length<o)return void t.d(this.TAG,\\\"packet(\\\"+h.length+\\\"/\\\"+o+\\\") too small, wait for next\\\");this._chunkstreams[d].addPayload(h),this._chunkstreams[d].isComplete()&&(t.d(this.TAG,\\\"RTMP: \\\",a.getMessageType(),c.MessageTypes[a.getMessageType()],a.getPayloadlength(),a.getMessageStreamID()),this.conn_worker.onMessage(this._chunkstreams[d]),this._chunkstreams[d].clearPayload());let l=s+o;l>this._buffer.length&&t.w(this.TAG,\\\"mehr abschneiden als da\\\"),this._buffer=this._buffer.slice(l),t.d(this.TAG,\\\"consumed: \\\"+l+\\\" bytes, rest: \\\"+this._buffer.length)}while(this._buffer.length>11);t.d(this.TAG,\\\"parseChunk complete\\\")}setChunkSize(e){t.d(this.TAG,\\\"SetChunkSize: \\\"+e),this.CHUNK_SIZE=e}}(this),this.media_handler=new class{TAG=\\\"RTMPMediaMessageHandler\\\";constructor(e){this._config=e,this._onError=null,this._onMediaInfo=null,this._onMetaDataArrived=null,this._onScriptDataArrived=null,this._onDataAvailable=null,this._onTrackMetadata=null,this._dispatch=!1,this._hasAudio=!0,this._hasVideo=!0,this._hasAudioFlagOverrided=!1,this._hasVideoFlagOverrided=!1,this._audioInitialMetadataDispatched=!1,this._videoInitialMetadataDispatched=!1,this._mediaInfo=new class{constructor(){this.mimeType=null,this.duration=null,this.hasAudio=null,this.hasVideo=null,this.audioCodec=null,this.videoCodec=null,this.audioDataRate=null,this.videoDataRate=null,this.audioSampleRate=null,this.audioChannelCount=null,this.width=null,this.height=null,this.fps=null,this.profile=null,this.level=null,this.refFrames=null,this.chromaFormat=null,this.sarNum=null,this.sarDen=null,this.metadata=null,this.segments=null,this.segmentCount=null,this.hasKeyframesIndex=null,this.keyframesIndex=null}isComplete(){let e=!1===this.hasAudio||!0===this.hasAudio&&null!=this.audioCodec&&null!=this.audioSampleRate&&null!=this.audioChannelCount,t=!1===this.hasVideo||!0===this.hasVideo&&null!=this.videoCodec&&null!=this.width&&null!=this.height&&null!=this.fps&&null!=this.profile&&null!=this.level&&null!=this.refFrames&&null!=this.chromaFormat&&null!=this.sarNum&&null!=this.sarDen;return null!=this.mimeType&&null!=this.duration&&null!=this.metadata&&null!=this.hasKeyframesIndex&&e&&t}isSeekable(){return!0===this.hasKeyframesIndex}getNearestKeyframe(e){if(null==this.keyframesIndex)return null;let t=this.keyframesIndex,s=this._search(t.times,e);return{index:s,milliseconds:t.times[s],fileposition:t.filepositions[s]}}_search(e,t){let s=0,a=e.length-1,i=0,n=0,r=a;for(t<e[0]&&(s=0,n=r+1);n<=r;){if(i=n+Math.floor((r-n)/2),i===a||t>=e[i]&&t<e[i+1]){s=i;break}e[i]<t?n=i+1:r=i-1}return s}},this._mediaInfo.hasAudio=this._hasAudio,this._mediaInfo.hasVideo=this._hasVideo,this._metadata=null,this._audioMetadata=null,this._videoMetadata=null,this._naluLengthSize=4,this._timestampBase=0,this._timescale=1e3,this._duration=0,this._durationOverrided=!1,this._referenceFrameRate={fixed:!0,fps:23.976,fps_num:23976,fps_den:1e3},this._flvSoundRateTable=[5500,11025,22050,44100,48e3],this._mpegSamplingRates=[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350],this._mpegAudioV10SampleRateTable=[44100,48e3,32e3,0],this._mpegAudioV20SampleRateTable=[22050,24e3,16e3,0],this._mpegAudioV25SampleRateTable=[11025,12e3,8e3,0],this._mpegAudioL1BitRateTable=[0,32,64,96,128,160,192,224,256,288,320,352,384,416,448,-1],this._mpegAudioL2BitRateTable=[0,32,48,56,64,80,96,112,128,160,192,224,256,320,384,-1],this._mpegAudioL3BitRateTable=[0,32,40,48,56,64,80,96,112,128,160,192,224,256,320,-1],this._videoTrack={type:\\\"video\\\",id:1,sequenceNumber:0,samples:[],length:0},this._audioTrack={type:\\\"audio\\\",id:2,sequenceNumber:0,samples:[],length:0},this._littleEndian=function(){let e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]}(),this.bytePos=0,this._config=h,this._remuxer=new class{TAG=\\\"MP4Remuxer\\\";constructor(e){this._config=e,this._isLive=!0===e.isLive,this._dtsBase=-1,this._dtsBaseInited=!1,this._audioDtsBase=1/0,this._videoDtsBase=1/0,this._audioNextDts=void 0,this._videoNextDts=void 0,this._audioStashedLastSample=null,this._videoStashedLastSample=null,this._audioMeta=null,this._videoMeta=null,this._audioSegmentInfoList=new G(\\\"audio\\\"),this._videoSegmentInfoList=new G(\\\"video\\\"),this._onInitSegment=null,this._onMediaSegment=null,this._forceFirstIDR=!(!B.chrome||!(B.version.major<50||50===B.version.major&&B.version.build<2661)),this._fillSilentAfterSeek=B.msedge||B.msie,this._mp3UseMpegAudio=!B.firefox,this._fillAudioTimestampGap=this._config.fixAudioTimestampGap}destroy(){this._dtsBase=-1,this._dtsBaseInited=!1,this._audioMeta=null,this._videoMeta=null,this._audioSegmentInfoList.clear(),this._audioSegmentInfoList=null,this._videoSegmentInfoList.clear(),this._videoSegmentInfoList=null,this._onInitSegment=null,this._onMediaSegment=null}get onInitSegment(){return this._onInitSegment}set onInitSegment(e){this._onInitSegment=e}get onMediaSegment(){return this._onMediaSegment}set onMediaSegment(e){this._onMediaSegment=e}insertDiscontinuity(){this._audioNextDts=this._videoNextDts=void 0}seek(e){this._audioStashedLastSample=null,this._videoStashedLastSample=null,this._videoSegmentInfoList.clear(),this._audioSegmentInfoList.clear()}remux(e,t){if(!this._onMediaSegment)throw new y(\\\"MP4Remuxer: onMediaSegment callback must be specificed!\\\");this._dtsBaseInited||this._calculateDtsBase(e,t),this._remuxVideo(t),this._remuxAudio(e)}_onTrackMetadataReceived(e,s){t.i(this.TAG,\\\"_onTrackMetadataReceived\\\");let a=null,i=\\\"mp4\\\",n=s.codec;if(\\\"audio\\\"===e)this._audioMeta=s,\\\"mp3\\\"===s.codec&&this._mp3UseMpegAudio?(i=\\\"mpeg\\\",n=\\\"\\\",a=new Uint8Array(0)):a=C.generateInitSegment(s);else{if(\\\"video\\\"!==e)return;this._videoMeta=s,a=C.generateInitSegment(s)}if(!this._onInitSegment)throw new y(\\\"MP4Remuxer: onInitSegment callback must be specified!\\\");this._onInitSegment(e,{type:e,data:a.buffer,codec:n,container:`${e}/${i}`,mediaDuration:s.duration})}_calculateDtsBase(e,t){this._dtsBaseInited||(e.samples&&e.samples.length&&(this._audioDtsBase=e.samples[0].dts),t.samples&&t.samples.length&&(this._videoDtsBase=t.samples[0].dts),this._dtsBase=Math.min(this._audioDtsBase,this._videoDtsBase),this._dtsBaseInited=!0)}flushStashedSamples(){let e=this._videoStashedLastSample,t=this._audioStashedLastSample,s={type:\\\"video\\\",id:1,sequenceNumber:0,samples:[],length:0};null!=e&&(s.samples.push(e),s.length=e.length);let a={type:\\\"audio\\\",id:2,sequenceNumber:0,samples:[],length:0};null!=t&&(a.samples.push(t),a.length=t.length),this._videoStashedLastSample=null,this._audioStashedLastSample=null,this._remuxVideo(s,!0),this._remuxAudio(a,!0)}_remuxAudio(e,s){if(t.i(this.TAG,\\\"_remuxAudio\\\"),null==this._audioMeta)return void t.w(this.TAG,\\\"no audioMeta\\\");let a,i=e,n=i.samples,r=-1,o=-1,h=this._audioMeta.refSampleDuration,d=\\\"mp3\\\"===this._audioMeta.codec&&this._mp3UseMpegAudio,l=this._dtsBaseInited&&void 0===this._audioNextDts,c=!1;if(!n||0===n.length)return void t.w(this.TAG,\\\"no samples\\\");if(1===n.length&&!s)return void t.w(this.TAG,\\\"1 sample\\\");let u=0,m=null,g=0;d?(u=0,g=i.length):(u=8,g=8+i.length);let p=null;if(n.length>1&&(p=n.pop(),g-=p.length),null!=this._audioStashedLastSample){let e=this._audioStashedLastSample;this._audioStashedLastSample=null,n.unshift(e),g+=e.length}null!=p&&(this._audioStashedLastSample=p);let _=n[0].dts-this._dtsBase;if(this._audioNextDts)a=_-this._audioNextDts;else if(this._audioSegmentInfoList.isEmpty())a=0,this._fillSilentAfterSeek&&!this._videoSegmentInfoList.isEmpty()&&\\\"mp3\\\"!==this._audioMeta.originalCodec&&(c=!0);else{let e=this._audioSegmentInfoList.getLastSampleBefore(_);if(null!=e){let t=_-(e.originalDts+e.duration);t<=3&&(t=0),a=_-(e.dts+e.duration+t)}else a=0}if(c){let e=_-a,s=this._videoSegmentInfoList.getLastSegmentBefore(_);if(null!=s&&s.beginDts<e){let a=U.getSilentFrame(this._audioMeta.originalCodec,this._audioMeta.channelCount);if(a){let i=s.beginDts,r=e-s.beginDts;t.v(this.TAG,`InsertPrefixSilentAudio: dts: ${i}, duration: ${r}`),n.unshift({unit:a,dts:i,pts:i}),g+=a.byteLength}}else c=!1}let f=[];for(let e=0;e<n.length;e++){let s=n[e],i=s.unit,o=s.dts-this._dtsBase,d=o,l=!1,c=null,u=0;if(!(o<-.001)){if(\\\"mp3\\\"!==this._audioMeta.codec){let e=o;const s=3;if(this._audioNextDts&&(e=this._audioNextDts),a=o-e,a<=-s*h){t.w(this.TAG,`Dropping 1 audio frame (originalDts: ${o} ms ,curRefDts: ${e} ms)  due to dtsCorrection: ${a} ms overlap.`);continue}if(a>=s*h&&this._fillAudioTimestampGap&&!B.safari){l=!0;let s=Math.floor(a/h);t.w(this.TAG,`Large audio timestamp gap detected, may cause AV sync to drift. Silent frames will be generated to avoid unsync.\\\\noriginalDts: ${o} ms, curRefDts: ${e} ms, dtsCorrection: ${Math.round(a)} ms, generate: ${s} frames`),d=Math.floor(e),u=Math.floor(e+h)-d;let n=U.getSilentFrame(this._audioMeta.originalCodec,this._audioMeta.channelCount);null==n&&(t.w(this.TAG,`Unable to generate silent frame for ${this._audioMeta.originalCodec} with ${this._audioMeta.channelCount} channels, repeat last frame`),n=i),c=[];for(let t=0;t<s;t++){e+=h;let t=Math.floor(e),s=Math.floor(e+h)-t,a={dts:t,pts:t,cts:0,unit:n,size:n.byteLength,duration:s,originalDts:o,flags:{isLeading:0,dependsOn:1,isDependedOn:0,hasRedundancy:0}};c.push(a),g+=a.size}this._audioNextDts=e+h}else d=Math.floor(e),u=Math.floor(e+h)-d,this._audioNextDts=e+h}else d=o-a,u=e!==n.length-1?n[e+1].dts-this._dtsBase-a-d:null!=p?p.dts-this._dtsBase-a-d:f.length>=1?f[f.length-1].duration:Math.floor(h),this._audioNextDts=d+u;-1===r&&(r=d),f.push({dts:d,pts:d,cts:0,unit:s.unit,size:s.unit.byteLength,duration:u,originalDts:o,flags:{isLeading:0,dependsOn:1,isDependedOn:0,hasRedundancy:0}}),l&&f.push.apply(f,c)}}if(0===f.length)return i.samples=[],i.length=0,void t.w(this.TAG,\\\"no mp4Samples = 0\\\");d?m=new Uint8Array(g):(m=new Uint8Array(g),m[0]=g>>>24&255,m[1]=g>>>16&255,m[2]=g>>>8&255,m[3]=255&g,m.set(C.types.mdat,4));for(let e=0;e<f.length;e++){let t=f[e].unit;m.set(t,u),u+=t.byteLength}let y=f[f.length-1];o=y.dts+y.duration;let A,S=new x;S.beginDts=r,S.endDts=o,S.beginPts=r,S.endPts=o,S.originalBeginDts=f[0].originalDts,S.originalEndDts=y.originalDts+y.duration,S.firstSample=new I(f[0].dts,f[0].pts,f[0].duration,f[0].originalDts,!1),S.lastSample=new I(y.dts,y.pts,y.duration,y.originalDts,!1),this._isLive||this._audioSegmentInfoList.append(S),i.samples=f,i.sequenceNumber++,A=d?new Uint8Array(0):C.moof(i,r),i.samples=[],i.length=0;let v={type:\\\"audio\\\",data:this._mergeBoxes(A,m).buffer,sampleCount:f.length,info:S};d&&l&&(v.timestampOffset=r),t.i(this.TAG,\\\"send onMediaSegment audio\\\"),this._onMediaSegment(\\\"audio\\\",v)}_remuxVideo(e,s){if(t.i(this.TAG,\\\"_remuxVideo\\\"),null==this._videoMeta)return;let a,i=e,n=i.samples,r=-1,o=-1,h=-1,d=-1;if(!n||0===n.length)return void t.w(this.TAG,\\\"no samples\\\");if(1===n.length&&!s)return void t.w(this.TAG,\\\"no sampes = 1\\\");let l=8,c=null,u=8+e.length,m=null;if(n.length>1&&(m=n.pop(),u-=m.length),null!=this._videoStashedLastSample){let e=this._videoStashedLastSample;this._videoStashedLastSample=null,n.unshift(e),u+=e.length}null!=m&&(this._videoStashedLastSample=m);let g=n[0].dts-this._dtsBase;if(this._videoNextDts)a=g-this._videoNextDts;else if(this._videoSegmentInfoList.isEmpty())a=0;else{let e=this._videoSegmentInfoList.getLastSampleBefore(g);if(null!=e){let t=g-(e.originalDts+e.duration);t<=3&&(t=0),a=g-(e.dts+e.duration+t)}else a=0}let p=new x,_=[];for(let e=0;e<n.length;e++){let t=n[e],s=t.dts-this._dtsBase,i=t.isKeyframe,o=s-a,d=t.cts,l=o+d;-1===r&&(r=o,h=l);let c=0;if(c=e!==n.length-1?n[e+1].dts-this._dtsBase-a-o:null!=m?m.dts-this._dtsBase-a-o:_.length>=1?_[_.length-1].duration:Math.floor(this._videoMeta.refSampleDuration),i){let e=new I(o,l,c,t.dts,!0);e.fileposition=t.fileposition,p.appendSyncPoint(e)}_.push({dts:o,pts:l,cts:d,units:t.units,size:t.length,isKeyframe:i,duration:c,originalDts:s,flags:{isLeading:0,dependsOn:i?2:1,isDependedOn:i?1:0,hasRedundancy:0,isNonSync:i?0:1}})}c=new Uint8Array(u),c[0]=u>>>24&255,c[1]=u>>>16&255,c[2]=u>>>8&255,c[3]=255&u,c.set(C.types.mdat,4);for(let e=0;e<_.length;e++){let t=_[e].units;for(;t.length;){let e=t.shift().data;c.set(e,l),l+=e.byteLength}}let f=_[_.length-1];if(o=f.dts+f.duration,d=f.pts+f.duration,this._videoNextDts=o,p.beginDts=r,p.endDts=o,p.beginPts=h,p.endPts=d,p.originalBeginDts=_[0].originalDts,p.originalEndDts=f.originalDts+f.duration,p.firstSample=new I(_[0].dts,_[0].pts,_[0].duration,_[0].originalDts,_[0].isKeyframe),p.lastSample=new I(f.dts,f.pts,f.duration,f.originalDts,f.isKeyframe),this._isLive||this._videoSegmentInfoList.append(p),i.samples=_,i.sequenceNumber++,this._forceFirstIDR){let e=_[0].flags;e.dependsOn=2,e.isNonSync=0}let y=C.moof(i,r);i.samples=[],i.length=0,t.i(this.TAG,\\\"send onMediaSegment video\\\"),this._onMediaSegment(\\\"video\\\",{type:\\\"video\\\",data:this._mergeBoxes(y,c).buffer,sampleCount:_.length,info:p})}_mergeBoxes(e,t){let s=new Uint8Array(e.byteLength+t.byteLength);return s.set(e,0),s.set(t,e.byteLength),s}}(this._config),this._remuxer.onInitSegment=(e,t)=>{postMessage([\\\"init_segment\\\",e,t])},this._remuxer.onMediaSegment=(e,t)=>{postMessage([\\\"media_segment\\\",e,t])},this._onDataAvailable=(e,t)=>{this._remuxer.remux(e,t)},this._onTrackMetadata=(e,t)=>{this._remuxer._onTrackMetadataReceived(e,t)}}destroy(){this._remuxer&&(this._remuxer.destroy(),this._remuxer=null),this._mediaInfo=null,this._metadata=null,this._audioMetadata=null,this._videoMetadata=null,this._videoTrack=null,this._audioTrack=null,this._onError=null,this._onMediaInfo=null,this._onMetaDataArrived=null,this._onScriptDataArrived=null,this._onTrackMetadata=null,this._onDataAvailable=null}get onMediaInfo(){return this._onMediaInfo}set onMediaInfo(e){this._onMediaInfo=e}get onMetaDataArrived(){return this._onMetaDataArrived}set onMetaDataArrived(e){this._onMetaDataArrived=e}get onScriptDataArrived(){return this._onScriptDataArrived}set onScriptDataArrived(e){this._onScriptDataArrived=e}get onError(){return this._onError}set onError(e){this._onError=e}_isInitialMetadataDispatched(){return this._hasAudio&&this._hasVideo?this._audioInitialMetadataDispatched&&this._videoInitialMetadataDispatched:this._hasAudio&&!this._hasVideo?this._audioInitialMetadataDispatched:!(this._hasAudio||!this._hasVideo)&&this._videoInitialMetadataDispatched}handleMediaMessage(e){if(t.d(this.TAG,\\\"handleMediaMessage\\\",e.getMessageType()),!(this._onError&&this._onMediaInfo&&this._onTrackMetadata&&this._onDataAvailable))throw new y(\\\"Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified\\\");this._dispatch=!0;let s=e.getMessageType(),a=e.getTimestamp();switch(0!==e.getMessageStreamID()&&t.w(this.TAG,\\\"Meet tag which has StreamID != 0!\\\"),t.d(this.TAG,e),s){case 8:this._parseAudioData(e.getPayload(),a);break;case 9:this._parseVideoData(e.getPayload(),a,this.bytePos);break;case 18:this._parseScriptData(e.getPayload())}this.bytePos+=e.getMessageLength()+11+1,this._isInitialMetadataDispatched()&&this._dispatch&&(this._audioTrack.length||this._videoTrack.length)&&(t.i(this.TAG,\\\"sedn2\\\"),this._onDataAvailable(this._audioTrack,this._videoTrack))}_parseScriptData(e){let s=T.parseScriptData(e);if(s.hasOwnProperty(\\\"onMetaData\\\")){if(null==s.onMetaData||\\\"object\\\"!=typeof s.onMetaData)return void t.w(this.TAG,\\\"Invalid onMetaData structure!\\\");this._metadata&&t.w(this.TAG,\\\"Found another onMetaData tag!\\\"),this._metadata=s;let e=this._metadata.onMetaData;if(this._onMetaDataArrived&&this._onMetaDataArrived(Object.assign({},e)),\\\"boolean\\\"==typeof e.hasAudio&&!1===this._hasAudioFlagOverrided&&(this._hasAudio=e.hasAudio,this._mediaInfo.hasAudio=this._hasAudio),\\\"boolean\\\"==typeof e.hasVideo&&!1===this._hasVideoFlagOverrided&&(this._hasVideo=e.hasVideo,this._mediaInfo.hasVideo=this._hasVideo),\\\"number\\\"==typeof e.audiodatarate&&(this._mediaInfo.audioDataRate=e.audiodatarate),\\\"number\\\"==typeof e.videodatarate&&(this._mediaInfo.videoDataRate=e.videodatarate),\\\"number\\\"==typeof e.width&&(this._mediaInfo.width=e.width),\\\"number\\\"==typeof e.height&&(this._mediaInfo.height=e.height),\\\"number\\\"==typeof e.duration){if(!this._durationOverrided){let t=Math.floor(e.duration*this._timescale);this._duration=t,this._mediaInfo.duration=t}}else this._mediaInfo.duration=0;if(\\\"number\\\"==typeof e.framerate){let t=Math.floor(1e3*e.framerate);if(t>0){let e=t/1e3;this._referenceFrameRate.fixed=!0,this._referenceFrameRate.fps=e,this._referenceFrameRate.fps_num=t,this._referenceFrameRate.fps_den=1e3,this._mediaInfo.fps=e}}if(\\\"object\\\"==typeof e.keyframes){this._mediaInfo.hasKeyframesIndex=!0;let t=e.keyframes;this._mediaInfo.keyframesIndex=this._parseKeyframesIndex(t),e.keyframes=null}else this._mediaInfo.hasKeyframesIndex=!1;this._dispatch=!1,this._mediaInfo.metadata=e,t.v(this.TAG,\\\"Parsed onMetaData\\\"),this._mediaInfo.isComplete()&&this._onMediaInfo(this._mediaInfo)}Object.keys(s).length>0&&this._onScriptDataArrived&&this._onScriptDataArrived(Object.assign({},s))}_parseKeyframesIndex(e){let t=[],s=[];for(let a=1;a<e.times.length;a++){let i=this._timestampBase+Math.floor(1e3*e.times[a]);t.push(i),s.push(e.filepositions[a])}return{times:t,filepositions:s}}_parseAudioData(e,s){if(t.d(this.TAG,\\\"_parseAudioData\\\",s),e.length<=1)return void t.w(this.TAG,\\\"Flv: Invalid audio packet, missing SoundData payload!\\\");if(!0===this._hasAudioFlagOverrided&&!1===this._hasAudio)return;this._littleEndian;let a=new DataView(e.buffer).getUint8(0),i=a>>>4;if(2!==i&&10!==i)return void this._onError(l,\\\"Flv: Unsupported audio codec idx: \\\"+i);let n=0,r=(12&a)>>>2;if(!(r>=0&&r<=4))return void this._onError(d,\\\"Flv: Invalid audio sample rate idx: \\\"+r);n=this._flvSoundRateTable[r];let o=1&a,h=this._audioMetadata,c=this._audioTrack;if(h||(!1===this._hasAudio&&!1===this._hasAudioFlagOverrided&&(this._hasAudio=!0,this._mediaInfo.hasAudio=!0),h=this._audioMetadata={},h.type=\\\"audio\\\",h.id=c.id,h.timescale=this._timescale,h.duration=this._duration,h.audioSampleRate=n,h.channelCount=0===o?1:2),10===i){let a=this._parseAACAudioData(e.slice(1));if(null==a)return;if(0===a.packetType){h.config&&t.w(this.TAG,\\\"Found another AudioSpecificConfig!\\\");let e=a.data;h.audioSampleRate=e.samplingRate,h.channelCount=e.channelCount,h.codec=e.codec,h.originalCodec=e.originalCodec,h.config=e.config,h.refSampleDuration=1024/h.audioSampleRate*h.timescale,t.v(this.TAG,\\\"Parsed AudioSpecificConfig\\\"),this._isInitialMetadataDispatched()?this._dispatch&&(this._audioTrack.length||this._videoTrack.length)&&this._onDataAvailable(this._audioTrack,this._videoTrack):this._audioInitialMetadataDispatched=!0,this._dispatch=!1,t.i(this.TAG,\\\"ON!\\\"),this._onTrackMetadata(\\\"audio\\\",h);let s=this._mediaInfo;s.audioCodec=h.originalCodec,s.audioSampleRate=h.audioSampleRate,s.audioChannelCount=h.channelCount,s.hasVideo?null!=s.videoCodec&&(s.mimeType='video/x-flv; codecs=\\\"'+s.videoCodec+\\\",\\\"+s.audioCodec+'\\\"'):s.mimeType='video/x-flv; codecs=\\\"'+s.audioCodec+'\\\"',s.isComplete()&&this._onMediaInfo(s)}else if(1===a.packetType){let e=this._timestampBase+s,t={unit:a.data,length:a.data.byteLength,dts:e,pts:e};c.samples.push(t),c.length+=a.data.length}else t.e(this.TAG,`Flv: Unsupported AAC data type ${a.packetType}`)}else if(2===i){if(!h.codec){let s=this._parseMP3AudioData(e.slice(1),!0);if(null==s)return;h.audioSampleRate=s.samplingRate,h.channelCount=s.channelCount,h.codec=s.codec,h.originalCodec=s.originalCodec,h.refSampleDuration=1152/h.audioSampleRate*h.timescale,t.v(this.TAG,\\\"Parsed MPEG Audio Frame Header\\\"),this._audioInitialMetadataDispatched=!0,this._onTrackMetadata(\\\"audio\\\",h);let a=this._mediaInfo;a.audioCodec=h.codec,a.audioSampleRate=h.audioSampleRate,a.audioChannelCount=h.channelCount,a.audioDataRate=s.bitRate,a.hasVideo?null!=a.videoCodec&&(a.mimeType='video/x-flv; codecs=\\\"'+a.videoCodec+\\\",\\\"+a.audioCodec+'\\\"'):a.mimeType='video/x-flv; codecs=\\\"'+a.audioCodec+'\\\"',a.isComplete()&&this._onMediaInfo(a)}let a=this._parseMP3AudioData(e.slice(1),!1);if(null==a)return;let i=this._timestampBase+s,n={unit:a,length:a.byteLength,dts:i,pts:i};c.samples.push(n),c.length+=a.length}}_parseAACAudioData(e){if(e.length<=1)return void t.w(this.TAG,\\\"Flv: Invalid AAC packet, missing AACPacketType or/and Data!\\\");let s={};return s.packetType=e[0],0===e[0]?s.data=this._parseAACAudioSpecificConfig(e.slice(1)):s.data=e.subarray(1),s}_parseAACAudioSpecificConfig(e){let t=null,s=0,a=0,i=0,n=null;if(s=a=e[0]>>>3,i=(7&e[0])<<1|e[1]>>>7,i<0||i>=this._mpegSamplingRates.length)return void this._onError(d,\\\"Flv: AAC invalid sampling frequency index!\\\");let r=this._mpegSamplingRates[i],o=(120&e[1])>>>3;if(o<0||o>=8)return void this._onError(d,\\\"Flv: AAC invalid channel configuration\\\");5===s&&(n=(7&e[1])<<1|e[2]>>>7,e[2]);let h=self.navigator.userAgent.toLowerCase();return-1!==h.indexOf(\\\"firefox\\\")?i>=6?(s=5,t=new Array(4),n=i-3):(s=2,t=new Array(2),n=i):-1!==h.indexOf(\\\"android\\\")?(s=2,t=new Array(2),n=i):(s=5,n=i,t=new Array(4),i>=6?n=i-3:1===o&&(s=2,t=new Array(2),n=i)),t[0]=s<<3,t[0]|=(15&i)>>>1,t[1]=(15&i)<<7,t[1]|=(15&o)<<3,5===s&&(t[1]|=(15&n)>>>1,t[2]=(1&n)<<7,t[2]|=8,t[3]=0),{config:t,samplingRate:r,channelCount:o,codec:\\\"mp4a.40.\\\"+s,originalCodec:\\\"mp4a.40.\\\"+a}}_parseMP3AudioData(e,s){if(e.length<4)return void t.w(this.TAG,\\\"Flv: Invalid MP3 packet, header missing!\\\");let a=null;if(s){if(255!==e[0])return;let t=e[1]>>>3&3,s=(6&e[1])>>1,i=(240&e[2])>>>4,n=(12&e[2])>>>2,r=3!=(e[3]>>>6&3)?2:1,o=0,h=0,d=34,l=\\\"mp3\\\";switch(t){case 0:o=this._mpegAudioV25SampleRateTable[n];break;case 2:o=this._mpegAudioV20SampleRateTable[n];break;case 3:o=this._mpegAudioV10SampleRateTable[n]}switch(s){case 1:d=34,i<this._mpegAudioL3BitRateTable.length&&(h=this._mpegAudioL3BitRateTable[i]);break;case 2:d=33,i<this._mpegAudioL2BitRateTable.length&&(h=this._mpegAudioL2BitRateTable[i]);break;case 3:d=32,i<this._mpegAudioL1BitRateTable.length&&(h=this._mpegAudioL1BitRateTable[i])}a={bitRate:h,samplingRate:o,channelCount:r,codec:l,originalCodec:l}}else a=e;return a}_parseVideoData(e,s,a){if(e.length<=1)return void t.w(this.TAG,\\\"Flv: Invalid video packet, missing VideoData payload!\\\");if(!0===this._hasVideoFlagOverrided&&!1===this._hasVideo)return;let i=e[0],n=(240&i)>>>4,r=15&i;7===r?this._parseAVCVideoPacket(e.slice(1),s,a,n):this._onError(l,`Flv: Unsupported codec in video frame: ${r}`)}_parseAVCVideoPacket(e,s,a,i){if(e.length<4)return void t.w(this.TAG,\\\"Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime\\\");let n=this._littleEndian,r=new DataView(e.buffer),o=r.getUint8(0),h=(16777215&r.getUint32(0,!n))<<8>>8;if(0===o)this._parseAVCDecoderConfigurationRecord(e.slice(4));else if(1===o)this._parseAVCVideoData(e.slice(4),s,a,i,h);else if(2!==o)return void this._onError(d,`Flv: Invalid video packet type ${o}`)}_parseAVCDecoderConfigurationRecord(e){if(e.length<7)return void t.w(this.TAG,\\\"Flv: Invalid AVCDecoderConfigurationRecord, lack of data!\\\");let s=this._videoMetadata,a=this._videoTrack,i=this._littleEndian,n=new DataView(e.buffer);s?void 0!==s.avcc&&t.w(this.TAG,\\\"Found another AVCDecoderConfigurationRecord!\\\"):(!1===this._hasVideo&&!1===this._hasVideoFlagOverrided&&(this._hasVideo=!0,this._mediaInfo.hasVideo=!0),s=this._videoMetadata={},s.type=\\\"video\\\",s.id=a.id,s.timescale=this._timescale,s.duration=this._duration);let r=n.getUint8(0),o=n.getUint8(1);if(n.getUint8(2),n.getUint8(3),1!==r||0===o)return void this._onError(d,\\\"Flv: Invalid AVCDecoderConfigurationRecord\\\");if(this._naluLengthSize=1+(3&n.getUint8(4)),3!==this._naluLengthSize&&4!==this._naluLengthSize)return void this._onError(d,\\\"Flv: Strange NaluLengthSizeMinusOne: \\\"+(this._naluLengthSize-1));let h=31&n.getUint8(5);if(0===h)return void this._onError(d,\\\"Flv: Invalid AVCDecoderConfigurationRecord: No SPS\\\");h>1&&t.w(this.TAG,`Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${h}`);let l=6;for(let t=0;t<h;t++){let a=n.getUint16(l,!i);if(l+=2,0===a)continue;let r=new Uint8Array(e.slice(l,l+a));l+=a;let o=k.parseSPS(r);if(0!==t)continue;s.codecWidth=o.codec_size.width,s.codecHeight=o.codec_size.height,s.presentWidth=o.present_size.width,s.presentHeight=o.present_size.height,s.profile=o.profile_string,s.level=o.level_string,s.bitDepth=o.bit_depth,s.chromaFormat=o.chroma_format,s.sarRatio=o.sar_ratio,s.frameRate=o.frame_rate,!1!==o.frame_rate.fixed&&0!==o.frame_rate.fps_num&&0!==o.frame_rate.fps_den||(s.frameRate=this._referenceFrameRate);let h=s.frameRate.fps_den,d=s.frameRate.fps_num;s.refSampleDuration=s.timescale*(h/d);let c=r.subarray(1,4),u=\\\"avc1.\\\";for(let e=0;e<3;e++){let t=c[e].toString(16);t.length<2&&(t=\\\"0\\\"+t),u+=t}s.codec=u;let m=this._mediaInfo;m.width=s.codecWidth,m.height=s.codecHeight,m.fps=s.frameRate.fps,m.profile=s.profile,m.level=s.level,m.refFrames=o.ref_frames,m.chromaFormat=o.chroma_format_string,m.sarNum=s.sarRatio.width,m.sarDen=s.sarRatio.height,m.videoCodec=u,m.hasAudio?null!=m.audioCodec&&(m.mimeType='video/x-flv; codecs=\\\"'+m.videoCodec+\\\",\\\"+m.audioCodec+'\\\"'):m.mimeType='video/x-flv; codecs=\\\"'+m.videoCodec+'\\\"',m.isComplete()&&this._onMediaInfo(m)}let c=n.getUint8(l);if(0!==c){c>1&&t.w(this.TAG,`Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${c}`),l++;for(let e=0;e<c;e++){let e=n.getUint16(l,!i);l+=2,0!==e&&(l+=e)}s.avcc=new Uint8Array(e.length),s.avcc.set(new Uint8Array(e),0),t.v(this.TAG,\\\"Parsed AVCDecoderConfigurationRecord\\\"),this._isInitialMetadataDispatched()?this._dispatch&&(this._audioTrack.length||this._videoTrack.length)&&this._onDataAvailable(this._audioTrack,this._videoTrack):this._videoInitialMetadataDispatched=!0,this._dispatch=!1,this._onTrackMetadata(\\\"video\\\",s)}else this._onError(d,\\\"Flv: Invalid AVCDecoderConfigurationRecord: No PPS\\\")}_parseAVCVideoData(e,s,a,i,n){t.v(this.TAG,s,a,this._timestampBase);let r=this._littleEndian,o=new DataView(e.buffer),h=[],d=0,l=e.length,c=0;const u=this._naluLengthSize;let m=this._timestampBase+s,g=1===i;for(;c<l;){if(c+4>=l){t.w(this.TAG,`Malformed Nalu near timestamp ${m}, offset = ${c}, dataSize = ${l}`);break}let s=o.getUint32(c,!r);if(3===u&&(s>>>=8),s>l-u)return void t.w(this.TAG,`Malformed Nalus near timestamp ${m}, NaluSize > DataSize!`);let a=31&o.getUint8(c+u);5===a&&(g=!0);let i=new Uint8Array(e.slice(c,c+u+s)),n={type:a,data:i};h.push(n),d+=i.byteLength,c+=u+s}if(h.length){let e=this._videoTrack,t={units:h,length:d,isKeyframe:g,dts:m,cts:n,pts:m+n};g&&(t.fileposition=a),e.samples.push(t),e.length+=d}}},this.media_handler.onError=(e,s)=>{t.d(this.TAG,e,s),postMessage([\\\"onError\\\",e,s])},this.media_handler.onMediaInfo=e=>{t.d(this.TAG,e),postMessage([\\\"onMediaInfo\\\",e])},this.media_handler.onMetaDataArrived=e=>{postMessage([\\\"onMetaDataArrived\\\",e])},this.media_handler.onScriptDataArrived=e=>{postMessage([\\\"onScriptDataArrived\\\",e])},this.media_handler.onScriptDataArrived=e=>{postMessage([\\\"onMetaDataArrived\\\",e])},this.media_handler.onScriptDataArrived=e=>{postMessage([\\\"onMetaDataArrived\\\",e])}}destroy(){this.media_handler.destroy(),this.media_handler=null,this.chunk_parser=null}parseChunk(e){t.d(this.TAG,\\\"parseChunk: \\\"+e.length),this.chunk_parser.parseChunk(e)}onMessage(e){switch(t.d(this.TAG,\\\" onMessage: \\\"+e.getMessageType()+\\\" StreamID:\\\"+e.getMessageStreamID()),e.getMessageType()){case 1:case 2:case 3:case 5:case 6:this.netconnections[e.getMessageStreamID()].parseMessage(e);break;case 4:this._handleUserControlMessage(e);break;case 8:t.d(this.TAG,\\\"AUDIOFRAME: \\\",e),this.media_handler.handleMediaMessage(e);break;case 9:t.d(this.TAG,\\\"VIDEOFRAME: \\\",e),this.media_handler.handleMediaMessage(e);break;case 18:t.d(this.TAG,\\\"DATAFRAME: \\\",e),this.media_handler.handleMediaMessage(e);break;case 19:t.d(this.TAG,\\\"SharedObjectMessage\\\",e);break;case 20:let s=(new E).parseAMF0(e.getPayload());switch(t.d(this.TAG,\\\"AMF0\\\",s),s[0]){case\\\"_error\\\":t.e(this.TAG,s);break;case\\\"_result\\\":switch(this.trackedCommand){case\\\"connect\\\":t.d(this.TAG,\\\"got _result: \\\"+s[3].code),\\\"NetConnection.Connect.Success\\\"===s[3].code&&(postMessage([s[3].code]),this.createStream(null));break;case\\\"createStream\\\":t.d(this.TAG,\\\"got _result: \\\"+s[3]),s[3]&&(this.current_stream_id=s[4],postMessage([\\\"RTMPStreamCreated\\\",s[3],s[4]]));break;case\\\"play\\\":case\\\"pause\\\":break;default:t.w(\\\"tracked command:\\\"+this.trackedCommand)}break;case\\\"onStatus\\\":t.d(this.TAG,\\\"onStatus: \\\"+s[3].code),postMessage([s[3].code]);break;default:t.w(this.TAG,\\\"CommandMessage \\\"+s[0]+\\\" not yet implemented\\\")}break;case 22:break;case 15:case 16:case 17:t.e(this.TAG,\\\"AMF3 is not yet implemented\\\");break;default:t.d(this.TAG,\\\"[MessageType: \\\"+c.MessageTypes[e.getMessageType()]+\\\"(\\\"+e.getMessageType()+\\\")\\\")}}connect(e){const t=new E([\\\"connect\\\",1,e]);this._sendCommand(3,t)}createStream(e){const t=new E([\\\"createStream\\\",1,e]);this._sendCommand(3,t)}deleteStream(e){const t=new E([\\\"deleteStream\\\",1,null,e]);this._sendCommand(3,t)}play(e){const t=new E([\\\"play\\\",1,null,e]);this._sendCommand(3,t)}stop(){this.deleteStream(this.current_stream_id)}pause(e){if(this.paused!==e){this.paused=e;const t=new E([\\\"pause\\\",0,null,e,0]);this._sendCommand(3,t)}}receiveVideo(e){const t=new E([\\\"receiveVideo\\\",0,null,e]);this._sendCommand(3,t)}receiveAudio(e){const t=new E([\\\"receiveAudio\\\",0,null,e]);this._sendCommand(3,t)}_sendCommand(e,s){t.d(this.TAG,\\\"sendCommand:\\\",s),this.trackedCommand=s.getCommand();let a=new c(s.getBytes());a.setMessageType(20),a.setMessageStreamID(0);const i=new u(a);i.setChunkStreamID(e);let n=i.getBytes();this.netconnections[0]=new class{TAG=\\\"NetConnection\\\";WindowAcknowledgementSize;MessageStreamID;CHUNK_SIZE=128;BandWidth;socket;constructor(e,s){this.MessageStreamID=e,t.d(this.TAG,s),this.handler=s,this.socket=s.socket}parseMessage(e){let s=e.getPayload();switch(e.getMessageType()){case 1:this.CHUNK_SIZE=s[0]<<24|s[1]<<16|s[2]<<8|s[3],this.handler.setChunkSize(this.CHUNK_SIZE);break;case 2:case 3:case 5:this.WindowAcknowledgementSize=s[0]<<24|s[1]<<16|s[2]<<8|s[3],t.i(this.TAG,\\\"WindowAcknowledgementSize: \\\"+this.WindowAcknowledgementSize);break;case 6:this.BandWidth=s[0]<<24|s[1]<<16|s[2]<<8|s[3],t.i(this.TAG,\\\"SetPeerBandwidth: \\\"+this.BandWidth);let e=new _(5,this.WindowAcknowledgementSize),a=new c(e.getBytes());a.setMessageType(5);const i=new u(a);i.setChunkStreamID(2),t.i(this.TAG,\\\"send WindowAcksize\\\"),this.socket.send(i.getBytes())}}}(0,this),this.socket.send(n)}setChunkSize(e){this.chunk_parser.setChunkSize(e)}_getNextMessageStreamID(){return this.netconnections.length}_getNextChunkStreamID(){return++this.chunk_stream_id}_handleUserControlMessage(e){let s=e.getPayload();switch(this.event_type=s[0]<<8|s[1],s=s.slice(2),this.event_type){case 0:case 1:case 2:case 4:case 6:case 7:this.event_data1=s[0]<<24|s[1]<<16|s[2]<<8|s[3];break;case 3:this.event_data1=s[0]<<24|s[1]<<16|s[2]<<8|s[3],this.event_data2=s[4]<<24|s[5]<<16|s[6]<<8|s[7]}if(6===this.event_type){postMessage([\\\"UserControlMessage\\\",[\\\"ping\\\",this.event_data1]]);const e=new g;e.setType(7),e.setEventData(this.event_data1);let s=new c(e.getBytes());s.setMessageType(4);const a=new u(s);a.setChunkStreamID(2),t.i(this.TAG,\\\"send Pong\\\"),this.socket.send(a.getBytes())}}}(N.getSocket()),t.d(L,\\\"connect to RTMPManager\\\"),N.registerMessageHandler((e=>{V.parseChunk(new Uint8Array(e.data))})),postMessage([\\\"RTMPHandshakeDone\\\"])):(t.e(L,\\\"Handshake failed\\\"),postMessage([\\\"RTMPHandshakeFailed\\\"]))},e.do()}else t.v(this.TAG,\\\"WSSConnectFailed\\\"),postMessage([\\\"WSSConnectFailed\\\"])}));break;case\\\"connect\\\":if(!V){t.e(this.TAG,\\\"RTMP not connected\\\");break}V.connect({app:i=a.appName,flashVer:\\\"WebRTMP 0,0,1\\\",tcUrl:\\\"rtmp://\\\"+F+\\\":1935/\\\"+i,fpad:!1,capabilities:15,audioCodecs:1024,videoCodecs:128,videoFunction:0});break;case\\\"play\\\":if(!V){t.e(this.TAG,\\\"RTMP not connected\\\");break}V.play(a.streamName);break;case\\\"stop\\\":if(!V){t.e(this.TAG,\\\"RTMP not connected\\\");break}V.stop();break;case\\\"pause\\\":if(!V){t.e(this.TAG,\\\"RTMP not connected\\\");break}V.pause(a.enable);break;case\\\"disconnect\\\":V&&V.destroy(),N.close();break;case\\\"loglevels\\\":t.d(L,\\\"setting loglevels\\\",a.loglevels),t.loglevels=a.loglevels;break;default:t.w(L,\\\"Unknown CMD: \\\"+a.cmd)}var i}),!1),postMessage([\\\"Started\\\"])})();\\n\", \"Worker\", undefined, undefined);\n}\n","/*\r\n *\r\n * Copyright (C) 2023 itNOX. All Rights Reserved.\r\n *\r\n * @author Michael Balen <mb@itnox.de>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n\r\nimport Log from \"./utils/logger\";\r\nimport MSEController from \"./utils/mse-controller\";\r\nimport {defaultConfig, ErrorDetails, ErrorTypes, MSEEvents, PlayerEvents, TransmuxingEvents} from \"./utils/utils\";\r\nimport EventEmitter from \"./utils/event_emitter\";\r\nimport WebRTMP_Controller from \"./wss/webrtmp.controller\";\r\n\r\n/**\r\n * the main class for webrtmp. Handles the remuxer result\r\n */\r\nexport class WebRTMP{\r\n\tTAG = 'WebRTMP';\r\n\r\n\t/**\r\n\t *\r\n\t * @type {HTMLVideoElement}\r\n\t * @private\r\n\t */\r\n\t_mediaElement = null;\r\n\r\n\tconstructor() {\r\n\t\tthis.wss = new WebRTMP_Controller();\r\n\r\n\t\tthis._config = defaultConfig\r\n\r\n\t\tthis.wss.addEventListener(\"RTMPMessageArrived\", (data)=>{\r\n\t\t\tLog.d(this.TAG,\"RTMPMessageArrived\", data);\r\n\t\t});\r\n\r\n\t\tthis.wss.addEventListener(\"ProtocolControlMessage\", (data)=>{\r\n\t\t\tLog.d(this.TAG,\"ProtocolControlMessage\", data);\r\n\t\t});\r\n\r\n\t\tthis.wss.addEventListener(\"UserControlMessage\", (data)=>{\r\n\t\t\tLog.d(this.TAG,\"UserControlMessage\", data);\r\n\t\t});\r\n\r\n\t\tthis.wss.addEventListener(\"ConnectionLost\", ()=>{});\r\n\r\n\t\tthis._emitter = new EventEmitter();\r\n\r\n\t\tthis.e = {\r\n\t\t\tonvLoadedMetadata: this._onvLoadedMetadata.bind(this),\r\n\t\t\tonvCanPlay: this._onvCanPlay.bind(this),\r\n\t\t\tonvStalled: this._onvStalled.bind(this),\r\n\t\t\tonvProgress: this._onvProgress.bind(this),\r\n\t\t\tonvPlay: this._onvPlay.bind(this),\r\n\t\t\tonvPause: this._onvPause.bind(this),\r\n\t\t\tonAppendInitSegment: this._appendMediaSegment.bind(this),\r\n\t\t\tonAppendMediaSegment: this._appendMediaSegment.bind(this)\r\n\t\t};\r\n\t}\r\n\r\n\t_checkAndResumeStuckPlayback(stalled) {\r\n\t\tlet media = this._mediaElement;\r\n\t\tif (stalled || !this._receivedCanPlay || media.readyState < 2) {  // HAVE_CURRENT_DATA\r\n\t\t\tlet buffered = media.buffered;\r\n\t\t\tif (buffered.length > 0 && media.currentTime < buffered.start(0)) {\r\n\t\t\t\tLog.w(this.TAG, `Playback seems stuck at ${media.currentTime}, seek to ${buffered.start(0)}`);\r\n\t\t\t\t//this._requestSetTime = true;\r\n\t\t\t\tthis._mediaElement.currentTime = buffered.start(0);\r\n\t\t\t\tthis._mediaElement.removeEventListener('progress', this.e.onvProgress);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Playback didn't stuck, remove progress event listener\r\n\t\t\tthis._mediaElement.removeEventListener('progress', this.e.onvProgress);\r\n\t\t}\r\n\t}\r\n\r\n\t_onvLoadedMetadata() {\r\n\t\tif (this._pendingSeekTime != null) {\r\n\t\t\tthis._mediaElement.currentTime = this._pendingSeekTime;\r\n\t\t\tthis._pendingSeekTime = null;\r\n\t\t}\r\n\t}\r\n\r\n\t_onvCanPlay(e) {\r\n\t\tLog.d(this.TAG, \"onvCanPlay\", e);\r\n\t\tthis._mediaElement.play().then(()=>{\r\n\t\t\tLog.d(this.TAG, \"promise play\");\r\n\t\t});\r\n\t\tthis._receivedCanPlay = true;\r\n\t\tthis._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);\r\n\t}\r\n\r\n\t_onvStalled() {\r\n\t\tthis._checkAndResumeStuckPlayback(true);\r\n\t}\r\n\r\n\t_onvProgress() {\r\n\t\tthis._checkAndResumeStuckPlayback();\r\n\t}\r\n\r\n\t_onmseBufferFull() {\r\n\t\tLog.w(this.TAG, 'MSE SourceBuffer is full');\r\n\t}\r\n\r\n\t_onvPlay(e){\r\n\t\tLog.d(this.TAG, \"play:\", e);\r\n\t\tthis.pause(false);\r\n\t}\r\n\r\n\t_onvPause(e) {\r\n\t\tLog.d(this.TAG, \"pause\", e);\r\n\t\tthis.pause(true);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tLog.w(this.TAG, \"destroy webrtmp\");\r\n\t\tif (this._mediaElement) {\r\n\t\t\tthis.detachMediaElement();\r\n\t\t}\r\n\t\tthis.e = null;\r\n\t\tthis._emitter.removeAllListener();\r\n\t\tthis._emitter = null;\r\n\t}\r\n\r\n\tdisconnect(){\r\n\t\tthis.wss.disconnect();\r\n\t\tthis.wss.removeAllEventListener(\"RTMPHandshakeDone\");\r\n\t\tthis.wss.removeAllEventListener(\"WSSConnectFailed\");\r\n\t}\r\n\r\n\t/**\r\n\t * send play command\r\n\t * @param {String} streamName\r\n\t * @returns {Promise<unknown>}\r\n\t */\r\n\tplay(streamName){\r\n\t\tthis.wss.play(streamName);\r\n\t\treturn this._mediaElement.play();\r\n\t}\r\n\r\n    /**\r\n     * Stops loading, same as pause(true)\r\n     */\r\n\tstopLoad(){\r\n\t\t//this.wss.stop()\r\n\t\tthis._mediaElement.pause();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {String|null} host\r\n\t * @param {Number|null} port\r\n\t * @returns {Promise<unknown>}\r\n\t */\r\n\topen(host, port){\r\n\t\treturn this.wss.open(host, port);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {String} appName\r\n\t * @returns {Promise<unknown>}\r\n\t */\r\n\tconnect(appName){\r\n\t\treturn this.wss.connect(appName);\r\n\t}\r\n\r\n    /**\r\n     * Pause a rtmp stream\r\n     * @param {boolean} enable\r\n     */\r\n\tpause(enable){\r\n\t\tthis.wss.pause(enable);\r\n\r\n\t\tif(enable) {\r\n\t\t\tthis._mediaElement.pause();\r\n\r\n\t\t} else {\r\n\t\t\tthis.kerkDown = 10;\r\n\t\t\tthis._mediaElement.play().then(()=>{\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n    /**\r\n     * Detach Mediaelement\r\n     */\r\n\tdetachMediaElement() {\r\n\t\tthis.wss.removeAllEventListener(TransmuxingEvents.INIT_SEGMENT);\r\n\t\tthis.wss.removeAllEventListener(TransmuxingEvents.MEDIA_SEGMENT);\r\n\r\n\t\tif (this._mediaElement) {\r\n\t\t\tthis._msectl.detachMediaElement();\r\n\t\t\tthis._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\r\n\t\t\tthis._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);\r\n\t\t\tthis._mediaElement.removeEventListener('stalled', this.e.onvStalled);\r\n\t\t\tthis._mediaElement.removeEventListener('progress', this.e.onvProgress);\r\n\t\t\tthis._mediaElement.removeEventListener('play', this.e.onvPlay);\r\n\t\t\tthis._mediaElement.removeEventListener('pause', this.e.onvPause);\r\n\t\t\tthis._mediaElement = null;\r\n\t\t}\r\n\r\n\t\tif (this._msectl) {\r\n\t\t\tthis._msectl.destroy();\r\n\t\t\tthis._msectl = null;\r\n\t\t}\r\n\r\n\t\tthis.disconnect();\r\n\t}\r\n\r\n\t/**\r\n\t * Attach MediaElement\r\n\t * @param {HTMLVideoElement} mediaElement\r\n\t */\r\n\tattachMediaElement(mediaElement) {\r\n\t\tthis._mediaElement = mediaElement;\r\n\t\tmediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\r\n\t\tmediaElement.addEventListener('canplay', this.e.onvCanPlay);\r\n\t\tmediaElement.addEventListener('stalled', this.e.onvStalled);\r\n\t\tmediaElement.addEventListener('progress', this.e.onvProgress);\r\n\t\tmediaElement.addEventListener('play', this.e.onvPlay);\r\n\t\tmediaElement.addEventListener('pause', this.e.onvPause);\r\n\r\n\t\tthis._msectl = new MSEController(defaultConfig);\r\n\r\n\t\t//this._msectl.on(MSEEvents.UPDATE_END, this._onmseUpdateEnd.bind(this));\r\n\t\tthis._msectl.on(MSEEvents.BUFFER_FULL, this._onmseBufferFull.bind(this));\r\n\r\n\t\tthis._msectl.on(MSEEvents.ERROR, (info) => {\r\n\t\t\tthis._emitter.emit(PlayerEvents.ERROR,\r\n\t\t\t\tErrorTypes.MEDIA_ERROR,\r\n\t\t\t\tErrorDetails.MEDIA_MSE_ERROR,\r\n\t\t\t\tinfo\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.wss.addEventListener(TransmuxingEvents.INIT_SEGMENT, this._appendInitSegment.bind(this), true);\r\n\t\tthis.wss.addEventListener(TransmuxingEvents.MEDIA_SEGMENT, this._appendMediaSegment.bind(this), true);\r\n\r\n\t\tthis._msectl.attachMediaElement(mediaElement);\r\n\t}\r\n\r\n    /**\r\n     * Append Init Segment to MSE\r\n     * @param data\r\n     * @private\r\n     */\r\n\t_appendInitSegment(data){\r\n\t\tLog.i(this.TAG, TransmuxingEvents.INIT_SEGMENT, data[0], data[1]);\r\n\t\tthis._msectl.appendInitSegment(data[1]);\r\n\t}\r\n\r\n    /**\r\n     * Append Media Segment to MSE\r\n     * @param data\r\n     * @private\r\n     */\r\n\t_appendMediaSegment(data){\r\n\t\tLog.t(this.TAG, TransmuxingEvents.MEDIA_SEGMENT, data[0], data[1]);\r\n\t\tthis._msectl.appendMediaSegment(data[1]);\r\n\t\tif(this.kerkDown) {\r\n\t\t\tthis.kerkDown--;\r\n\t\t\tthis._mediaElement.currentTime = 2000000000;\r\n\r\n\t\t\tif(!this.kerkDown) Log.d(this.TAG, \"kerkdown reached\");\r\n\t\t}\r\n\t}\r\n}\r\n","/*\n *\n * Copyright (C) 2023 itNOX. All Rights Reserved.\n *\n * @author Michael Balen <mb@itnox.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport EventEmitter from \"../utils/event_emitter\";\nimport Log from \"../utils/logger\";\nimport Worker from \"./connection.worker.js\";\n\n\n/**\n * Class which handles the Websocket\n */\nclass WebRTMP_Controller {\n\tTAG = \"WebRTMP_Controller\";\n\thost = document.location.host;\n\tport = 9001;\n\tWSSReconnect = false;\n\tisConnected = false;\n\n\tWebRTMPWorker = new Worker();\n\n\tconstructor() {\n\t\tLog.loglevels = {\n            \"RTMPMessage\": Log.ERROR,\n            \"RTMPMessageHandler\": Log.WARN,\n            \"RTMPMediaMessageHandler\": Log.ERROR,\n            \"ChunkParser\": Log.WARN,\n            \"RTMPHandshake\": Log.ERROR,\n            \"Chunk\": Log.OFF,\n            \"MP4Remuxer\": Log.ERROR,\n            \"Transmuxer\": Log.WARN,\n            \"EventEmitter\": Log.DEBUG,\n            \"MSEController\": Log.INFO,\n            \"WebRTMP\": Log.DEBUG,\n            \"WebRTMP_Controller\": Log.WARN,\n            \"WebRTMP Worker\": Log.WARN,\n            \"AMF\": Log.WARN,\n            \"WSSConnectionManager\": Log.DEBUG\n        };\n\n\t\tthis._emitter = new EventEmitter();\n\n\t\tthis.WebRTMPWorker.addEventListener(\"message\", (evt)=>{\n\t\t\tthis.WorkerListener(evt);\n\t\t});\n\t}\n\n\t/**\n\t * Opens a WSS Connection\n\t * @param {String|null} host\n\t * @param {Number|null} port\n\t */\n\topen(host, port){\n\t\treturn new Promise((resolve, reject)=>{\n\t\t\tif(this.isConnected) return reject(\"Already Connected. Please disconnect first\");\n\t\t\tthis._emitter.waitForEvent(\"RTMPHandshakeDone\", resolve);\n\t\t\tthis._emitter.waitForEvent(\"WSSConnectFailed\", reject);\n\n\t\t\tif(host) this.host = host;\n\t\t\tif(port) this.port = port;\n\n\t\t\tthis.WebRTMPWorker.postMessage({cmd: \"open\", host: this.host, port: this.port});\n\t\t})\n\t}\n\n\t/**\n\t * Websocket disconnect\n\t */\n\tdisconnect() {\n\t\tthis.WSSReconnect = false;\n\t\tthis.WebRTMPWorker.postMessage({cmd: \"disconnect\"});\n\t}\n\n\t/**\n\t * RTMP connect application\n\t * @param {String} appName\n\t */\n\tconnect(appName){\n\t\treturn new Promise((resolve, reject)=>{\n\t\t\tthis._emitter.waitForEvent(\"RTMPStreamCreated\", resolve);\n\t\t\tthis.WebRTMPWorker.postMessage({cmd: \"connect\", appName: appName});\n\t\t})\n\n\t}\n\n\t/**\n\t * RTMP play streamname\n\t * @param {String} streamName\n\t */\n\tplay(streamName){\n\t\tthis.WebRTMPWorker.postMessage({cmd: \"play\", streamName: streamName});\n\t}\n\n    /**\n     * RTMP stop\n     */\n\tstop(){\n\t\tthis.WebRTMPWorker.postMessage({cmd: \"stop\"});\n\t}\n\n    /**\n     * Pause a video, RTMP Connection will also paused\n     * @param {boolean} enable - Enable or disable pause mode\n     */\n    pause(enable){\n        this.WebRTMPWorker.postMessage({cmd: \"pause\", enable: enable});\n    }\n\n\n\t/**\n\t * add Eventlistener\n\t * @param type\n\t * @param listener\n\t * @param {boolean} modal - Register only one Event, if exists overwrite\n\t */\n\taddEventListener(type, listener, modal){\n\t\tthis._emitter.addEventListener(type, listener, modal);\n\t}\n\n    /**\n     * Remove Eventlistner\n     * @param {String} type - Event name\n     * @param {Function} listener - callback when event occurs\n     */\n\tremoveEventListener(type, listener){\n\t\tthis._emitter.removeEventListener(type, listener);\n\t}\n\n    /**\n     * Remove All registered Listener\n     * @param type\n     */\n\tremoveAllEventListener(type){\n\t\tthis._emitter.removeAllEventListener(type);\n\t}\n\n\n\t/**\n\t *\n\t * @param {MessageEvent} evt\n\t * @constructor\n\t */\n\tWorkerListener(evt){\n\t\t// Message.data wieder zum Event machen\n\t\tconst data = evt.data;\n\n\t\tswitch(data[0]){\n\t\t\tcase \"ConnectionLost\":\n\t\t\t\tthis._emitter.emit(\"ConnectionLost\");\n\t\t\t\tLog.d(this.TAG, \"Event ConnectionLost\");\n\n\t\t\t\tthis.isConnected = false;\n\n\t\t\t\tif(this.WSSReconnect) {\n\t\t\t\t\tLog.w(this.TAG,\"[ WorkerListener ] Reconnect timed\");\n\n\t\t\t\t\twindow.setTimeout(()=>{\n\t\t\t\t\t\tLog.w(this.TAG, \"timed Reconnect\");\n\t\t\t\t\t\tthis.open(this.host, this.port);\n\t\t\t\t\t}, 1000)\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"Connected\":\n\t\t\t\tLog.d(this.TAG, \"Event Connected\");\n\t\t\t\tthis._emitter.emit(\"Connected\");\n\t\t\t\tthis.isConnected = true;\n\t\t\t\tbreak;\n\n\t\t\tcase \"Started\":\n\t\t\t\tthis.WebRTMPWorker.postMessage({\n\t\t\t\t\tcmd: \"loglevels\",\n\t\t\t\t\tloglevels: this.loglevels\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tLog.i(this.TAG, data[0], data.slice(1));\n\t\t\t\tthis._emitter.emit(data[0], data.slice(1));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default WebRTMP_Controller;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from \"./logger\";\nimport EventEmitter from \"./event_emitter\";\nimport {IDRSampleList} from \"../formats/media-segment-info\";\nimport {IllegalStateException} from \"./exception\";\nimport {MSEEvents} from \"./utils\";\nimport Browser from \"./browser\";\n\nclass MSEController {\n\tTAG = 'MSEController';\n\n\tconstructor(config) {\n\t\tthis._config = config;\n\t\tthis._emitter = new EventEmitter();\n\n\t\tif (this._config.isLive && this._config.autoCleanupSourceBuffer == undefined) {\n\t\t\t// For live stream, do auto cleanup by default\n\t\t\tthis._config.autoCleanupSourceBuffer = true;\n\t\t}\n\n\t\tthis.e = {\n\t\t\tonSourceOpen: this._onSourceOpen.bind(this),\n\t\t\tonSourceEnded: this._onSourceEnded.bind(this),\n\t\t\tonSourceClose: this._onSourceClose.bind(this),\n\t\t\tonSourceBufferError: this._onSourceBufferError.bind(this),\n\t\t\tonSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)\n\t\t};\n\n\t\tthis._mediaSource = null;\n\t\tthis._mediaSourceObjectURL = null;\n\t\tthis._mediaElement = null;\n\n\t\tthis._isBufferFull = false;\n\t\tthis._hasPendingEos = false;\n\n\t\tthis._requireSetMediaDuration = false;\n\t\tthis._pendingMediaDuration = 0;\n\n\t\tthis._pendingSourceBufferInit = [];\n\t\tthis._mimeTypes = {\n\t\t\tvideo: null,\n\t\t\taudio: null\n\t\t};\n\t\tthis._sourceBuffers = {\n\t\t\tvideo: null,\n\t\t\taudio: null\n\t\t};\n\t\tthis._lastInitSegments = {\n\t\t\tvideo: null,\n\t\t\taudio: null\n\t\t};\n\t\tthis._pendingSegments = {\n\t\t\tvideo: [],\n\t\t\taudio: []\n\t\t};\n\t\tthis._pendingRemoveRanges = {\n\t\t\tvideo: [],\n\t\t\taudio: []\n\t\t};\n\t\tthis._idrList = new IDRSampleList();\n\t}\n\n\tdestroy() {\n\t\tif (this._mediaElement || this._mediaSource) {\n\t\t\tthis.detachMediaElement();\n\t\t}\n\t\tthis.e = null;\n\t\tthis._emitter.removeAllListener();\n\t\tthis._emitter = null;\n\t}\n\n\ton(event, listener) {\n\t\tthis._emitter.addListener(event, listener);\n\t}\n\n\toff(event, listener) {\n\t\tthis._emitter.removeListener(event, listener);\n\t}\n\n\tattachMediaElement(mediaElement) {\n\t\tLog.i(this.TAG, \"attach\");\n\t\tif (this._mediaSource) {\n\t\t\tthrow new IllegalStateException('MediaSource has been attached to an HTMLMediaElement!');\n\t\t}\n\t\tlet ms = this._mediaSource = new window.MediaSource();\n\t\tms.addEventListener('sourceopen', this.e.onSourceOpen);\n\t\tms.addEventListener('sourceended', this.e.onSourceEnded);\n\t\tms.addEventListener('sourceclose', this.e.onSourceClose);\n\n\t\tthis._mediaElement = mediaElement;\n\t\tthis._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource);\n\t\tmediaElement.src = this._mediaSourceObjectURL;\n\t}\n\n\tdetachMediaElement() {\n\t\tLog.i(this.TAG, \"detach\");\n\n\t\tif (this._mediaSource) {\n\t\t\tlet ms = this._mediaSource;\n\n\t\t\tif (ms.readyState === 'open') {\n\t\t\t\ttry {\n\t\t\t\t\tms.endOfStream();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.e(this.TAG, error.message);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfor (let type in this._sourceBuffers) {\n\t\t\t\t// pending segments should be discard\n\t\t\t\tlet ps = this._pendingSegments[type];\n\t\t\t\tps.splice(0, ps.length);\n\t\t\t\tthis._pendingSegments[type] = null;\n\t\t\t\tthis._pendingRemoveRanges[type] = null;\n\t\t\t\tthis._lastInitSegments[type] = null;\n\n\t\t\t\t// remove all sourcebuffers\n\t\t\t\tlet sb = this._sourceBuffers[type];\n\t\t\t\tif (sb) {\n\t\t\t\t\tLog.i(this.TAG, \"try to remove sourcebuffer: \" + type);\n\t\t\t\t\tif (ms.readyState !== 'closed') {\n\t\t\t\t\t\t// ms edge can throw an error: Unexpected call to method or property access\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tLog.i(this.TAG, \"removing sourcebuffer: \" + type);\n\t\t\t\t\t\t\tms.removeSourceBuffer(sb);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tLog.e(this.TAG, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsb.removeEventListener('error', this.e.onSourceBufferError);\n\t\t\t\t\t\tsb.removeEventListener('updateend', this.e.onSourceBufferUpdateEnd);\n\t\t\t\t\t}\n\t\t\t\t\tthis._mimeTypes[type] = null;\n\t\t\t\t\tthis._sourceBuffers[type] = null;\n\t\t\t\t}\n\t\t\t}\n\n\n\n\t\t\t// proprerly remove sourcebuffers\n\t\t\t/*\n\t\t\tfor(let mimeType in this._sourceBuffers) {\n\t\t\t\tthis._mediaSource.removeSourceBuffer(this._sourceBuffers[mimeType]);\n\t\t\t}*/\n\n\t\t\tms.removeEventListener('sourceopen', this.e.onSourceOpen);\n\t\t\tms.removeEventListener('sourceended', this.e.onSourceEnded);\n\t\t\tms.removeEventListener('sourceclose', this.e.onSourceClose);\n\t\t\tthis._pendingSourceBufferInit = [];\n\t\t\tthis._isBufferFull = false;\n\t\t\tthis._idrList.clear();\n\t\t\tthis._mediaSource = null;\n\n\t\t} else {\n\t\t\tLog.w(this.TAG, \"no mediasource attached\");\n\t\t}\n\n\t\tif (this._mediaElement) {\n\t\t\tthis._mediaElement.src = '';\n\t\t\tthis._mediaElement.removeAttribute('src');\n\t\t\tthis._mediaElement = null;\n\t\t}\n\n\t\tif (this._mediaSourceObjectURL) {\n\t\t\twindow.URL.revokeObjectURL(this._mediaSourceObjectURL);\n\t\t\tthis._mediaSourceObjectURL = null;\n\t\t}\n\t}\n\n\tappendInitSegment(initSegment, deferred) {\n\t\tLog.i(this.TAG, \"appendInitSegment\", initSegment);\n\t\tif (!this._mediaSource || this._mediaSource.readyState !== 'open') {\n\t\t\t// sourcebuffer creation requires mediaSource.readyState === 'open'\n\t\t\t// so we defer the sourcebuffer creation, until sourceopen event triggered\n\t\t\tthis._pendingSourceBufferInit.push(initSegment);\n\t\t\t// make sure that this InitSegment is in the front of pending segments queue\n\t\t\tthis._pendingSegments[initSegment.type].push(initSegment);\n\t\t\treturn;\n\t\t}\n\n\t\tlet is = initSegment;\n\t\tlet mimeType = `${is.container}`;\n\t\tif (is.codec && is.codec.length > 0) {\n\t\t\tmimeType += `;codecs=${is.codec}`;\n\t\t}\n\n\t\tlet firstInitSegment = false;\n\n\t\tLog.v(this.TAG, 'Received Initialization Segment, mimeType: ' + mimeType);\n\t\tthis._lastInitSegments[is.type] = is;\n\n\t\tif (mimeType !== this._mimeTypes[is.type]) {\n\t\t\tif (!this._mimeTypes[is.type]) {  // empty, first chance create sourcebuffer\n\t\t\t\tfirstInitSegment = true;\n\t\t\t\ttry {\n\t\t\t\t\tlet sb = this._sourceBuffers[is.type] = this._mediaSource.addSourceBuffer(mimeType);\n\t\t\t\t\tsb.addEventListener('error', this.e.onSourceBufferError);\n\t\t\t\t\tsb.addEventListener('updateend', this.e.onSourceBufferUpdateEnd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.e(this.TAG, error.message);\n\t\t\t\t\tthis._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLog.v(this.TAG, `Notice: ${is.type} mimeType changed, origin: ${this._mimeTypes[is.type]}, target: ${mimeType}`);\n\t\t\t}\n\t\t\tthis._mimeTypes[is.type] = mimeType;\n\t\t}\n\n\t\tif (!deferred) {\n\t\t\t// deferred means this InitSegment has been pushed to pendingSegments queue\n\t\t\tthis._pendingSegments[is.type].push(is);\n\t\t}\n\t\tif (!firstInitSegment) {  // append immediately only if init segment in subsequence\n\t\t\tif (this._sourceBuffers[is.type] && !this._sourceBuffers[is.type].updating) {\n\t\t\t\tthis._doAppendSegments();\n\t\t\t}\n\t\t}\n\t\tif (Browser.safari && is.container === 'audio/mpeg' && is.mediaDuration > 0) {\n\t\t\t// 'audio/mpeg' track under Safari may cause MediaElement's duration to be NaN\n\t\t\t// Manually correct MediaSource.duration to make progress bar seekable, and report right duration\n\t\t\tthis._requireSetMediaDuration = true;\n\t\t\tthis._pendingMediaDuration = is.mediaDuration / 1000;  // in seconds\n\t\t\tthis._updateMediaSourceDuration();\n\t\t}\n\t}\n\n\tappendMediaSegment(mediaSegment) {\n\t\tLog.d(this.TAG, \"appendMediaSegment\", mediaSegment);\n\t\tlet ms = mediaSegment;\n\t\tthis._pendingSegments[ms.type].push(ms);\n\n\t\tif (this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer()) {\n\t\t\tthis._doCleanupSourceBuffer();\n\t\t}\n\n\t\tlet sb = this._sourceBuffers[ms.type];\n\t\tif (sb && !sb.updating && !this._hasPendingRemoveRanges()) {\n\t\t\tthis._doAppendSegments();\n\t\t}\n\t}\n\n\tendOfStream() {\n\t\tlet ms = this._mediaSource;\n\t\tlet sb = this._sourceBuffers;\n\t\tif (!ms || ms.readyState !== 'open') {\n\t\t\tif (ms && ms.readyState === 'closed' && this._hasPendingSegments()) {\n\t\t\t\t// If MediaSource hasn't turned into open state, and there're pending segments\n\t\t\t\t// Mark pending endOfStream, defer call until all pending segments appended complete\n\t\t\t\tthis._hasPendingEos = true;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (sb.video && sb.video.updating || sb.audio && sb.audio.updating) {\n\t\t\t// If any sourcebuffer is updating, defer endOfStream operation\n\t\t\t// See _onSourceBufferUpdateEnd()\n\t\t\tthis._hasPendingEos = true;\n\t\t} else {\n\t\t\tthis._hasPendingEos = false;\n\t\t\t// Notify media data loading complete\n\t\t\t// This is helpful for correcting total duration to match last media segment\n\t\t\t// Otherwise MediaElement's ended event may not be triggered\n\t\t\tms.endOfStream();\n\t\t}\n\t}\n\n\t_needCleanupSourceBuffer() {\n\t\tif (!this._config.autoCleanupSourceBuffer) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet currentTime = this._mediaElement.currentTime;\n\n\t\tfor (let type in this._sourceBuffers) {\n\t\t\tlet sb = this._sourceBuffers[type];\n\t\t\tif (sb) {\n\t\t\t\tlet buffered = sb.buffered;\n\t\t\t\tif (buffered.length >= 1) {\n\t\t\t\t\tif (currentTime - buffered.start(0) >= this._config.autoCleanupMaxBackwardDuration) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_doCleanupSourceBuffer() {\n\t\tlet currentTime = this._mediaElement.currentTime;\n\n\t\tfor (let type in this._sourceBuffers) {\n\t\t\tlet sb = this._sourceBuffers[type];\n\t\t\tif (sb) {\n\t\t\t\tlet buffered = sb.buffered;\n\t\t\t\tlet doRemove = false;\n\n\t\t\t\tfor (let i = 0; i < buffered.length; i++) {\n\t\t\t\t\tlet start = buffered.start(i);\n\t\t\t\t\tlet end = buffered.end(i);\n\n\t\t\t\t\tif (start <= currentTime && currentTime < end + 3) {  // padding 3 seconds\n\t\t\t\t\t\tif (currentTime - start >= this._config.autoCleanupMaxBackwardDuration) {\n\t\t\t\t\t\t\tdoRemove = true;\n\t\t\t\t\t\t\tlet removeEnd = currentTime - this._config.autoCleanupMinBackwardDuration;\n\t\t\t\t\t\t\tthis._pendingRemoveRanges[type].push({start: start, end: removeEnd});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (end < currentTime) {\n\t\t\t\t\t\tdoRemove = true;\n\t\t\t\t\t\tthis._pendingRemoveRanges[type].push({start: start, end: end});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (doRemove && !sb.updating) {\n\t\t\t\t\tthis._doRemoveRanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_updateMediaSourceDuration() {\n\t\tlet sb = this._sourceBuffers;\n\t\tif (this._mediaElement.readyState === 0 || this._mediaSource.readyState !== 'open') {\n\t\t\treturn;\n\t\t}\n\t\tif ((sb.video && sb.video.updating) || (sb.audio && sb.audio.updating)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet current = this._mediaSource.duration;\n\t\tlet target = this._pendingMediaDuration;\n\n\t\tif (target > 0 && (isNaN(current) || target > current)) {\n\t\t\tLog.v(this.TAG, `Update MediaSource duration from ${current} to ${target}`);\n\t\t\tthis._mediaSource.duration = target;\n\t\t}\n\n\t\tthis._requireSetMediaDuration = false;\n\t\tthis._pendingMediaDuration = 0;\n\t}\n\n\t_doRemoveRanges() {\n\t\tfor (let type in this._pendingRemoveRanges) {\n\t\t\tif (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet sb = this._sourceBuffers[type];\n\t\t\tlet ranges = this._pendingRemoveRanges[type];\n\t\t\twhile (ranges.length && !sb.updating) {\n\t\t\t\tlet range = ranges.shift();\n\t\t\t\tsb.remove(range.start, range.end);\n\t\t\t}\n\t\t}\n\t}\n\n\t_doAppendSegments() {\n\t\tlet pendingSegments = this._pendingSegments;\n\n\t\tfor (let type in pendingSegments) {\n\t\t\tif (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (pendingSegments[type].length > 0) {\n\t\t\t\tlet segment = pendingSegments[type].shift();\n\n\t\t\t\tif (segment.timestampOffset) {\n\t\t\t\t\t// For MPEG audio stream in MSE, if unbuffered-seeking occurred\n\t\t\t\t\t// We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.\n\t\t\t\t\tlet currentOffset = this._sourceBuffers[type].timestampOffset;\n\t\t\t\t\tlet targetOffset = segment.timestampOffset / 1000;  // in seconds\n\n\t\t\t\t\tlet delta = Math.abs(currentOffset - targetOffset);\n\t\t\t\t\tif (delta > 0.1) {  // If time delta > 100ms\n\t\t\t\t\t\tLog.v(this.TAG, `Update MPEG audio timestampOffset from ${currentOffset} to ${targetOffset}`);\n\t\t\t\t\t\tthis._sourceBuffers[type].timestampOffset = targetOffset;\n\t\t\t\t\t}\n\t\t\t\t\tdelete segment.timestampOffset;\n\t\t\t\t}\n\n\t\t\t\tif (!segment.data || segment.data.byteLength === 0) {\n\t\t\t\t\t// Ignore empty buffer\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tthis._sourceBuffers[type].appendBuffer(segment.data);\n\t\t\t\t\tthis._isBufferFull = false;\n\t\t\t\t\tif (type === 'video' && segment.hasOwnProperty('info')) {\n\t\t\t\t\t\tthis._idrList.appendArray(segment.info.syncPoints);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis._pendingSegments[type].unshift(segment);\n\t\t\t\t\tif (error.code === 22) {  // QuotaExceededError\n\t\t\t\t\t\t/* Notice that FireFox may not throw QuotaExceededError if SourceBuffer is full\n\t\t\t\t\t\t * Currently we can only do lazy-load to avoid SourceBuffer become scattered.\n\t\t\t\t\t\t * SourceBuffer eviction policy may be changed in future version of FireFox.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Related issues:\n\t\t\t\t\t\t * https://bugzilla.mozilla.org/show_bug.cgi?id=1279885\n\t\t\t\t\t\t * https://bugzilla.mozilla.org/show_bug.cgi?id=1280023\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\t// report buffer full, abort network IO\n\t\t\t\t\t\tif (!this._isBufferFull) {\n\t\t\t\t\t\t\tthis._emitter.emit(MSEEvents.BUFFER_FULL);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._isBufferFull = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.e(this.TAG, error.message);\n\t\t\t\t\t\tthis._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_onSourceOpen() {\n\t\tLog.v(this.TAG, 'MediaSource onSourceOpen');\n\t\tthis._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\n\t\t// deferred sourcebuffer creation / initialization\n\t\tif (this._pendingSourceBufferInit.length > 0) {\n\t\t\tlet pendings = this._pendingSourceBufferInit;\n\t\t\twhile (pendings.length) {\n\t\t\t\tlet segment = pendings.shift();\n\t\t\t\tthis.appendInitSegment(segment, true);\n\t\t\t}\n\t\t}\n\t\t// there may be some pending media segments, append them\n\t\tif (this._hasPendingSegments()) {\n\t\t\tthis._doAppendSegments();\n\t\t}\n\t\tthis._emitter.emit(MSEEvents.SOURCE_OPEN);\n\t}\n\n\t_onSourceEnded() {\n\t\t// fired on endOfStream\n\t\tLog.v(this.TAG, 'MediaSource onSourceEnded');\n\t}\n\n\t_onSourceClose() {\n\t\t// fired on detaching from media element\n\t\tLog.v(this.TAG, 'MediaSource onSourceClose');\n\t\tif (this._mediaSource && this.e != null) {\n\t\t\tthis._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\n\t\t\tthis._mediaSource.removeEventListener('sourceended', this.e.onSourceEnded);\n\t\t\tthis._mediaSource.removeEventListener('sourceclose', this.e.onSourceClose);\n\t\t}\n\t}\n\n\t_hasPendingSegments() {\n\t\tlet ps = this._pendingSegments;\n\t\treturn ps.video.length > 0 || ps.audio.length > 0;\n\t}\n\n\t_hasPendingRemoveRanges() {\n\t\tlet prr = this._pendingRemoveRanges;\n\t\treturn prr.video.length > 0 || prr.audio.length > 0;\n\t}\n\n\t_onSourceBufferUpdateEnd() {\n\t\tif (this._requireSetMediaDuration) {\n\t\t\tthis._updateMediaSourceDuration();\n\t\t} else if (this._hasPendingRemoveRanges()) {\n\t\t\tthis._doRemoveRanges();\n\t\t} else if (this._hasPendingSegments()) {\n\t\t\tthis._doAppendSegments();\n\t\t} else if (this._hasPendingEos) {\n\t\t\tthis.endOfStream();\n\t\t}\n\t\tthis._emitter.emit(MSEEvents.UPDATE_END);\n\t}\n\n\t_onSourceBufferError(e) {\n\t\tLog.e(this.TAG, `SourceBuffer Error: ${e}`);\n\t\t// this error might not always be fatal, just ignore it\n\t}\n\n}\n\nexport default MSEController;\n","/*\n *\n * Copyright (C) 2023 itNOX. All Rights Reserved.\n *\n * @author Michael Balen <mb@itnox.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n\nimport { WebRTMP } from \"./webrtmp\";\nimport Log from \"./utils/logger\";\nexport { WebRTMP } from \"./webrtmp\";\n\nexport function createWebRTMP(){\n    return new WebRTMP();\n}\n\nwindow[\"Log\"] = Log;\n"],"names":["root","factory","exports","module","define","amd","this","content","workerConstructor","workerOptions","url","globalScope","self","window","blob","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","URL","webkitURL","objectURL","createObjectURL","worker","revokeObjectURL","concat","encodeURIComponent","Error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Log","static","INFO","level","tag","txt","tmpLevel","LEVEL","loglevels","OFF","callstack","_getStackTrace","shift","color","TRACE","DEBUG","WARN","ERROR","CRITICAL","_print","WITH_STACKTRACE","console","group","groupCollapsed","i","length","log","groupEnd","dont","exist","stack","lines","split","push","msg","_output","ListenerList","TAG","waiters","constructor","addEventListener","event","listener","modal","entry","waitForEvent","callback","addListener","removeEventListener","splice","removeListener","removeAllEventListener","removeAllListener","emit","data","IDRSampleList","_list","clear","appendArray","syncPoints","list","originalDts","Array","apply","getLastSyncPointBeforeDts","dts","idx","last","mid","lbound","ubound","Math","floor","RuntimeException","message","_message","name","toString","IllegalStateException","super","defaultConfig","enableStashBuffer","stashInitialSize","isLive","autoCleanupSourceBuffer","autoCleanupMaxBackwardDuration","autoCleanupMinBackwardDuration","statisticsInfoReportInterval","fixAudioTimestampGap","headers","TransmuxingEvents","MSEEvents","Browser","ua","navigator","userAgent","toLowerCase","match","exec","indexOf","platform_match","matched","browser","version","majorVersion","platform","versionArray","major","parseInt","string","minor","build","chrome","opr","safari","webkit","rv","iemobile","msie","edge","msedge","opera","android","assign","detect","Worker_fn","WebRTMP","_mediaElement","wss","host","document","location","port","WSSReconnect","isConnected","WebRTMPWorker","_emitter","evt","WorkerListener","open","Promise","resolve","reject","postMessage","cmd","disconnect","connect","appName","play","streamName","stop","pause","enable","type","setTimeout","slice","_config","onvLoadedMetadata","_onvLoadedMetadata","bind","onvCanPlay","_onvCanPlay","onvStalled","_onvStalled","onvProgress","_onvProgress","onvPlay","_onvPlay","onvPause","_onvPause","onAppendInitSegment","_appendMediaSegment","onAppendMediaSegment","_checkAndResumeStuckPlayback","stalled","media","_receivedCanPlay","readyState","buffered","currentTime","start","_pendingSeekTime","then","_onmseBufferFull","destroy","detachMediaElement","stopLoad","kerkDown","_msectl","attachMediaElement","mediaElement","config","onSourceOpen","_onSourceOpen","onSourceEnded","_onSourceEnded","onSourceClose","_onSourceClose","onSourceBufferError","_onSourceBufferError","onSourceBufferUpdateEnd","_onSourceBufferUpdateEnd","_mediaSource","_mediaSourceObjectURL","_isBufferFull","_hasPendingEos","_requireSetMediaDuration","_pendingMediaDuration","_pendingSourceBufferInit","_mimeTypes","video","audio","_sourceBuffers","_lastInitSegments","_pendingSegments","_pendingRemoveRanges","_idrList","on","off","ms","MediaSource","src","endOfStream","error","ps","sb","removeSourceBuffer","removeAttribute","appendInitSegment","initSegment","deferred","is","mimeType","container","codec","firstInitSegment","addSourceBuffer","code","updating","_doAppendSegments","mediaDuration","_updateMediaSourceDuration","appendMediaSegment","mediaSegment","_needCleanupSourceBuffer","_doCleanupSourceBuffer","_hasPendingRemoveRanges","_hasPendingSegments","doRemove","end","removeEnd","_doRemoveRanges","current","duration","target","isNaN","ranges","range","remove","pendingSegments","segment","timestampOffset","currentOffset","targetOffset","abs","byteLength","appendBuffer","info","unshift","pendings","prr","_appendInitSegment","createWebRTMP"],"sourceRoot":""}